"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[766],{59917:function(e,t,r){r.r(t),r.d(t,{Account:function(){return K},AddressLookupTableAccount:function(){return De},AddressLookupTableInstruction:function(){return qr},AddressLookupTableProgram:function(){return Gr},Authorized:function(){return Jr},BLOCKHASH_CACHE_TIMEOUT_MS:function(){return Xe},BPF_LOADER_DEPRECATED_PROGRAM_ID:function(){return O},BPF_LOADER_PROGRAM_ID:function(){return Te},BpfLoader:function(){return Ce},COMPUTE_BUDGET_INSTRUCTION_LAYOUTS:function(){return Vr},ComputeBudgetInstruction:function(){return jr},ComputeBudgetProgram:function(){return Dr},Connection:function(){return Wr},Ed25519Program:function(){return Hr},Enum:function(){return v},EpochSchedule:function(){return Ne},FeeCalculatorLayout:function(){return we},Keypair:function(){return Nr},LAMPORTS_PER_SOL:function(){return Sn},LOOKUP_TABLE_INSTRUCTION_LAYOUTS:function(){return Ur},Loader:function(){return Be},Lockup:function(){return Yr},MAX_SEED_LENGTH:function(){return T},Message:function(){return Y},MessageAccountKeys:function(){return V},MessageV0:function(){return Q},NONCE_ACCOUNT_LENGTH:function(){return Ie},NonceAccount:function(){return _e},PACKET_DATA_SIZE:function(){return W},PUBLIC_KEY_LENGTH:function(){return C},PublicKey:function(){return z},SIGNATURE_LENGTH_IN_BYTES:function(){return U},SOLANA_SCHEMA:function(){return E},STAKE_CONFIG_ID:function(){return Xr},STAKE_INSTRUCTION_LAYOUTS:function(){return en},SYSTEM_INSTRUCTION_LAYOUTS:function(){return Pe},SYSVAR_CLOCK_PUBKEY:function(){return ae},SYSVAR_EPOCH_SCHEDULE_PUBKEY:function(){return ce},SYSVAR_INSTRUCTIONS_PUBKEY:function(){return ue},SYSVAR_RECENT_BLOCKHASHES_PUBKEY:function(){return de},SYSVAR_RENT_PUBKEY:function(){return le},SYSVAR_REWARDS_PUBKEY:function(){return he},SYSVAR_SLOT_HASHES_PUBKEY:function(){return ge},SYSVAR_SLOT_HISTORY_PUBKEY:function(){return pe},SYSVAR_STAKE_HISTORY_PUBKEY:function(){return ye},Secp256k1Program:function(){return $r},SendTransactionError:function(){return Ue},SolanaJSONRPCError:function(){return Ge},SolanaJSONRPCErrorCode:function(){return qe},StakeAuthorizationLayout:function(){return tn},StakeInstruction:function(){return Qr},StakeProgram:function(){return rn},Struct:function(){return P},SystemInstruction:function(){return xe},SystemProgram:function(){return ve},Transaction:function(){return se},TransactionExpiredBlockheightExceededError:function(){return q},TransactionExpiredNonceInvalidError:function(){return j},TransactionExpiredTimeoutError:function(){return G},TransactionInstruction:function(){return ne},TransactionMessage:function(){return ie},TransactionStatus:function(){return te},VALIDATOR_INFO_KEY:function(){return un},VERSION_PREFIX_MASK:function(){return N},VOTE_PROGRAM_ID:function(){return hn},ValidatorInfo:function(){return ln},VersionedMessage:function(){return ee},VersionedTransaction:function(){return oe},VoteAccount:function(){return pn},VoteAuthorizationLayout:function(){return an},VoteInit:function(){return nn},VoteInstruction:function(){return sn},VoteProgram:function(){return cn},clusterApiUrl:function(){return kn},sendAndConfirmRawTransaction:function(){return wn},sendAndConfirmTransaction:function(){return me}});var n=r(48764),s=r(75113),i=r(13550),o=r.n(i),a=r(10011),c=r.n(a),u=r(17748),d=r(25532),l=r(39386),h=r(40475),g=r(53471),p=r(31198),y=r.n(p),m=r(66855),b=r(89062),f=r(85609),k=r(95085);const w=s.UN.utils.randomPrivateKey,S=()=>{const e=s.UN.utils.randomPrivateKey(),t=I(e),r=new Uint8Array(64);return r.set(e),r.set(t,32),{publicKey:t,secretKey:r}},I=s.UN.getPublicKey;function _(e){try{return s.UN.ExtendedPoint.fromHex(e),!0}catch{return!1}}const A=(e,t)=>s.UN.sign(e,t.slice(0,32)),R=s.UN.verify,x=e=>n.Buffer.isBuffer(e)?e:e instanceof Uint8Array?n.Buffer.from(e.buffer,e.byteOffset,e.byteLength):n.Buffer.from(e);class P{constructor(e){Object.assign(this,e)}encode(){return n.Buffer.from((0,d.serialize)(E,this))}static decode(e){return(0,d.deserialize)(E,this,e)}static decodeUnchecked(e){return(0,d.deserializeUnchecked)(E,this,e)}}class v extends P{constructor(e){if(super(e),this.enum="",1!==Object.keys(e).length)throw new Error("Enum can only take single value");Object.keys(e).map((e=>{this.enum=e}))}}const E=new Map;let B;const T=32,C=32;let L=1;B=Symbol.toStringTag;class z extends P{constructor(e){if(super({}),this._bn=void 0,function(e){return void 0!==e._bn}(e))this._bn=e._bn;else{if("string"===typeof e){const t=c().decode(e);if(t.length!=C)throw new Error("Invalid public key input");this._bn=new(o())(t)}else this._bn=new(o())(e);if(this._bn.byteLength()>C)throw new Error("Invalid public key input")}}static unique(){const e=new z(L);return L+=1,new z(e.toBuffer())}equals(e){return this._bn.eq(e._bn)}toBase58(){return c().encode(this.toBytes())}toJSON(){return this.toBase58()}toBytes(){const e=this.toBuffer();return new Uint8Array(e.buffer,e.byteOffset,e.byteLength)}toBuffer(){const e=this._bn.toArrayLike(n.Buffer);if(e.length===C)return e;const t=n.Buffer.alloc(32);return e.copy(t,32-e.length),t}get[B](){return`PublicKey(${this.toString()})`}toString(){return this.toBase58()}static async createWithSeed(e,t,r){const s=n.Buffer.concat([e.toBuffer(),n.Buffer.from(t),r.toBuffer()]),i=(0,u.J)(s);return new z(i)}static createProgramAddressSync(e,t){let r=n.Buffer.alloc(0);e.forEach((function(e){if(e.length>T)throw new TypeError("Max seed length exceeded");r=n.Buffer.concat([r,x(e)])})),r=n.Buffer.concat([r,t.toBuffer(),n.Buffer.from("ProgramDerivedAddress")]);const s=(0,u.J)(r);if(_(s))throw new Error("Invalid seeds, address must fall off the curve");return new z(s)}static async createProgramAddress(e,t){return this.createProgramAddressSync(e,t)}static findProgramAddressSync(e,t){let r,s=255;for(;0!=s;){try{const i=e.concat(n.Buffer.from([s]));r=this.createProgramAddressSync(i,t)}catch(i){if(i instanceof TypeError)throw i;s--;continue}return[r,s]}throw new Error("Unable to find a viable program address nonce")}static async findProgramAddress(e,t){return this.findProgramAddressSync(e,t)}static isOnCurve(e){return _(new z(e).toBytes())}}z.default=new z("11111111111111111111111111111111"),E.set(z,{kind:"struct",fields:[["_bn","u256"]]});class K{constructor(e){if(this._publicKey=void 0,this._secretKey=void 0,e){const t=x(e);if(64!==e.length)throw new Error("bad secret key size");this._publicKey=t.slice(32,64),this._secretKey=t.slice(0,32)}else this._secretKey=x(w()),this._publicKey=x(I(this._secretKey))}get publicKey(){return new z(this._publicKey)}get secretKey(){return n.Buffer.concat([this._secretKey,this._publicKey],64)}}const O=new z("BPFLoader1111111111111111111111111111111111"),W=1232,N=127,U=64;class q extends Error{constructor(e){super(`Signature ${e} has expired: block height exceeded.`),this.signature=void 0,this.signature=e}}Object.defineProperty(q.prototype,"name",{value:"TransactionExpiredBlockheightExceededError"});class G extends Error{constructor(e,t){super(`Transaction was not confirmed in ${t.toFixed(2)} seconds. It is unknown if it succeeded or failed. Check signature ${e} using the Solana Explorer or CLI tools.`),this.signature=void 0,this.signature=e}}Object.defineProperty(G.prototype,"name",{value:"TransactionExpiredTimeoutError"});class j extends Error{constructor(e){super(`Signature ${e} has expired: the nonce is no longer valid.`),this.signature=void 0,this.signature=e}}Object.defineProperty(j.prototype,"name",{value:"TransactionExpiredNonceInvalidError"});class V{constructor(e,t){this.staticAccountKeys=void 0,this.accountKeysFromLookups=void 0,this.staticAccountKeys=e,this.accountKeysFromLookups=t}keySegments(){const e=[this.staticAccountKeys];return this.accountKeysFromLookups&&(e.push(this.accountKeysFromLookups.writable),e.push(this.accountKeysFromLookups.readonly)),e}get(e){for(const t of this.keySegments()){if(e<t.length)return t[e];e-=t.length}}get length(){return this.keySegments().flat().length}compileInstructions(e){if(this.length>256)throw new Error("Account index overflow encountered during compilation");const t=new Map;this.keySegments().flat().forEach(((e,r)=>{t.set(e.toBase58(),r)}));const r=e=>{const r=t.get(e.toBase58());if(void 0===r)throw new Error("Encountered an unknown instruction account key during compilation");return r};return e.map((e=>({programIdIndex:r(e.programId),accountKeyIndexes:e.keys.map((e=>r(e.pubkey))),data:e.data})))}}const D=(e="publicKey")=>l.blob(32,e),M=(e="signature")=>l.blob(64,e),H=(e="string")=>{const t=l.struct([l.u32("length"),l.u32("lengthPadding"),l.blob(l.offset(l.u32(),-8),"chars")],e),r=t.decode.bind(t),s=t.encode.bind(t),i=t;return i.decode=(e,t)=>r(e,t).chars.toString(),i.encode=(e,t,r)=>{const i={chars:n.Buffer.from(e,"utf8")};return s(i,t,r)},i.alloc=e=>l.u32().span+l.u32().span+n.Buffer.from(e,"utf8").length,i};function F(e,t){const r=e=>{if(e.span>=0)return e.span;if("function"===typeof e.alloc)return e.alloc(t[e.property]);if("count"in e&&"elementLayout"in e){const n=t[e.property];if(Array.isArray(n))return n.length*r(e.elementLayout)}else if("fields"in e)return F({layout:e},t[e.property]);return 0};let n=0;return e.layout.fields.forEach((e=>{n+=r(e)})),n}function Z(e){let t=0,r=0;for(;;){let n=e.shift();if(t|=(127&n)<<7*r,r+=1,0===(128&n))break}return t}function $(e,t){let r=t;for(;;){let t=127&r;if(r>>=7,0==r){e.push(t);break}t|=128,e.push(t)}}function X(e,t){if(!e)throw new Error(t||"Assertion failed")}class J{constructor(e,t){this.payer=void 0,this.keyMetaMap=void 0,this.payer=e,this.keyMetaMap=t}static compile(e,t){const r=new Map,n=e=>{const t=e.toBase58();let n=r.get(t);return void 0===n&&(n={isSigner:!1,isWritable:!1,isInvoked:!1},r.set(t,n)),n},s=n(t);s.isSigner=!0,s.isWritable=!0;for(const i of e){n(i.programId).isInvoked=!0;for(const e of i.keys){const t=n(e.pubkey);t.isSigner||=e.isSigner,t.isWritable||=e.isWritable}}return new J(t,r)}getMessageComponents(){const e=[...this.keyMetaMap.entries()];X(e.length<=256,"Max static account keys length exceeded");const t=e.filter((([,e])=>e.isSigner&&e.isWritable)),r=e.filter((([,e])=>e.isSigner&&!e.isWritable)),n=e.filter((([,e])=>!e.isSigner&&e.isWritable)),s=e.filter((([,e])=>!e.isSigner&&!e.isWritable)),i={numRequiredSignatures:t.length+r.length,numReadonlySignedAccounts:r.length,numReadonlyUnsignedAccounts:s.length};{X(t.length>0,"Expected at least one writable signer key");const[e]=t[0];X(e===this.payer.toBase58(),"Expected first writable signer key to be the fee payer")}return[i,[...t.map((([e])=>new z(e))),...r.map((([e])=>new z(e))),...n.map((([e])=>new z(e))),...s.map((([e])=>new z(e)))]]}extractTableLookup(e){const[t,r]=this.drainKeysFoundInLookupTable(e.state.addresses,(e=>!e.isSigner&&!e.isInvoked&&e.isWritable)),[n,s]=this.drainKeysFoundInLookupTable(e.state.addresses,(e=>!e.isSigner&&!e.isInvoked&&!e.isWritable));if(0!==t.length||0!==n.length)return[{accountKey:e.key,writableIndexes:t,readonlyIndexes:n},{writable:r,readonly:s}]}drainKeysFoundInLookupTable(e,t){const r=new Array,n=new Array;for(const[s,i]of this.keyMetaMap.entries())if(t(i)){const t=new z(s),i=e.findIndex((e=>e.equals(t)));i>=0&&(X(i<256,"Max lookup table index exceeded"),r.push(i),n.push(t),this.keyMetaMap.delete(s))}return[r,n]}}class Y{constructor(e){this.header=void 0,this.accountKeys=void 0,this.recentBlockhash=void 0,this.instructions=void 0,this.indexToProgramIds=new Map,this.header=e.header,this.accountKeys=e.accountKeys.map((e=>new z(e))),this.recentBlockhash=e.recentBlockhash,this.instructions=e.instructions,this.instructions.forEach((e=>this.indexToProgramIds.set(e.programIdIndex,this.accountKeys[e.programIdIndex])))}get version(){return"legacy"}get staticAccountKeys(){return this.accountKeys}get compiledInstructions(){return this.instructions.map((e=>({programIdIndex:e.programIdIndex,accountKeyIndexes:e.accounts,data:c().decode(e.data)})))}get addressTableLookups(){return[]}getAccountKeys(){return new V(this.staticAccountKeys)}static compile(e){const t=J.compile(e.instructions,e.payerKey),[r,n]=t.getMessageComponents(),s=new V(n).compileInstructions(e.instructions).map((e=>({programIdIndex:e.programIdIndex,accounts:e.accountKeyIndexes,data:c().encode(e.data)})));return new Y({header:r,accountKeys:n,recentBlockhash:e.recentBlockhash,instructions:s})}isAccountSigner(e){return e<this.header.numRequiredSignatures}isAccountWritable(e){const t=this.header.numRequiredSignatures;if(e>=this.header.numRequiredSignatures){return e-t<this.accountKeys.length-t-this.header.numReadonlyUnsignedAccounts}return e<t-this.header.numReadonlySignedAccounts}isProgramId(e){return this.indexToProgramIds.has(e)}programIds(){return[...this.indexToProgramIds.values()]}nonProgramIds(){return this.accountKeys.filter(((e,t)=>!this.isProgramId(t)))}serialize(){const e=this.accountKeys.length;let t=[];$(t,e);const r=this.instructions.map((e=>{const{accounts:t,programIdIndex:r}=e,s=Array.from(c().decode(e.data));let i=[];$(i,t.length);let o=[];return $(o,s.length),{programIdIndex:r,keyIndicesCount:n.Buffer.from(i),keyIndices:t,dataLength:n.Buffer.from(o),data:s}}));let s=[];$(s,r.length);let i=n.Buffer.alloc(W);n.Buffer.from(s).copy(i);let o=s.length;r.forEach((e=>{const t=l.struct([l.u8("programIdIndex"),l.blob(e.keyIndicesCount.length,"keyIndicesCount"),l.seq(l.u8("keyIndex"),e.keyIndices.length,"keyIndices"),l.blob(e.dataLength.length,"dataLength"),l.seq(l.u8("userdatum"),e.data.length,"data")]).encode(e,i,o);o+=t})),i=i.slice(0,o);const a=l.struct([l.blob(1,"numRequiredSignatures"),l.blob(1,"numReadonlySignedAccounts"),l.blob(1,"numReadonlyUnsignedAccounts"),l.blob(t.length,"keyCount"),l.seq(D("key"),e,"keys"),D("recentBlockhash")]),u={numRequiredSignatures:n.Buffer.from([this.header.numRequiredSignatures]),numReadonlySignedAccounts:n.Buffer.from([this.header.numReadonlySignedAccounts]),numReadonlyUnsignedAccounts:n.Buffer.from([this.header.numReadonlyUnsignedAccounts]),keyCount:n.Buffer.from(t),keys:this.accountKeys.map((e=>x(e.toBytes()))),recentBlockhash:c().decode(this.recentBlockhash)};let d=n.Buffer.alloc(2048);const h=a.encode(u,d);return i.copy(d,h),d.slice(0,h+i.length)}static from(e){let t=[...e];const r=t.shift();if(r!==(r&N))throw new Error("Versioned messages must be deserialized with VersionedMessage.deserialize()");const s=t.shift(),i=t.shift(),o=Z(t);let a=[];for(let c=0;c<o;c++){const e=t.slice(0,C);t=t.slice(C),a.push(new z(n.Buffer.from(e)))}const u=t.slice(0,C);t=t.slice(C);const d=Z(t);let l=[];for(let g=0;g<d;g++){const e=t.shift(),r=Z(t),s=t.slice(0,r);t=t.slice(r);const i=Z(t),o=t.slice(0,i),a=c().encode(n.Buffer.from(o));t=t.slice(i),l.push({programIdIndex:e,accounts:s,data:a})}const h={header:{numRequiredSignatures:r,numReadonlySignedAccounts:s,numReadonlyUnsignedAccounts:i},recentBlockhash:c().encode(n.Buffer.from(u)),accountKeys:a,instructions:l};return new Y(h)}}class Q{constructor(e){this.header=void 0,this.staticAccountKeys=void 0,this.recentBlockhash=void 0,this.compiledInstructions=void 0,this.addressTableLookups=void 0,this.header=e.header,this.staticAccountKeys=e.staticAccountKeys,this.recentBlockhash=e.recentBlockhash,this.compiledInstructions=e.compiledInstructions,this.addressTableLookups=e.addressTableLookups}get version(){return 0}get numAccountKeysFromLookups(){let e=0;for(const t of this.addressTableLookups)e+=t.readonlyIndexes.length+t.writableIndexes.length;return e}getAccountKeys(e){let t;if(e&&"accountKeysFromLookups"in e&&e.accountKeysFromLookups){if(this.numAccountKeysFromLookups!=e.accountKeysFromLookups.writable.length+e.accountKeysFromLookups.readonly.length)throw new Error("Failed to get account keys because of a mismatch in the number of account keys from lookups");t=e.accountKeysFromLookups}else if(e&&"addressLookupTableAccounts"in e&&e.addressLookupTableAccounts)t=this.resolveAddressTableLookups(e.addressLookupTableAccounts);else if(this.addressTableLookups.length>0)throw new Error("Failed to get account keys because address table lookups were not resolved");return new V(this.staticAccountKeys,t)}isAccountSigner(e){return e<this.header.numRequiredSignatures}isAccountWritable(e){const t=this.header.numRequiredSignatures,r=this.staticAccountKeys.length;if(e>=r){return e-r<this.addressTableLookups.reduce(((e,t)=>e+t.writableIndexes.length),0)}if(e>=this.header.numRequiredSignatures){return e-t<r-t-this.header.numReadonlyUnsignedAccounts}return e<t-this.header.numReadonlySignedAccounts}resolveAddressTableLookups(e){const t={writable:[],readonly:[]};for(const r of this.addressTableLookups){const n=e.find((e=>e.key.equals(r.accountKey)));if(!n)throw new Error(`Failed to find address lookup table account for table key ${r.accountKey.toBase58()}`);for(const e of r.writableIndexes){if(!(e<n.state.addresses.length))throw new Error(`Failed to find address for index ${e} in address lookup table ${r.accountKey.toBase58()}`);t.writable.push(n.state.addresses[e])}for(const e of r.readonlyIndexes){if(!(e<n.state.addresses.length))throw new Error(`Failed to find address for index ${e} in address lookup table ${r.accountKey.toBase58()}`);t.readonly.push(n.state.addresses[e])}}return t}static compile(e){const t=J.compile(e.instructions,e.payerKey),r=new Array,n={writable:new Array,readonly:new Array},s=e.addressLookupTableAccounts||[];for(const c of s){const e=t.extractTableLookup(c);if(void 0!==e){const[t,{writable:s,readonly:i}]=e;r.push(t),n.writable.push(...s),n.readonly.push(...i)}}const[i,o]=t.getMessageComponents(),a=new V(o,n).compileInstructions(e.instructions);return new Q({header:i,staticAccountKeys:o,recentBlockhash:e.recentBlockhash,compiledInstructions:a,addressTableLookups:r})}serialize(){const e=Array();$(e,this.staticAccountKeys.length);const t=this.serializeInstructions(),r=Array();$(r,this.compiledInstructions.length);const n=this.serializeAddressTableLookups(),s=Array();$(s,this.addressTableLookups.length);const i=l.struct([l.u8("prefix"),l.struct([l.u8("numRequiredSignatures"),l.u8("numReadonlySignedAccounts"),l.u8("numReadonlyUnsignedAccounts")],"header"),l.blob(e.length,"staticAccountKeysLength"),l.seq(D(),this.staticAccountKeys.length,"staticAccountKeys"),D("recentBlockhash"),l.blob(r.length,"instructionsLength"),l.blob(t.length,"serializedInstructions"),l.blob(s.length,"addressTableLookupsLength"),l.blob(n.length,"serializedAddressTableLookups")]),o=new Uint8Array(W),a=i.encode({prefix:128,header:this.header,staticAccountKeysLength:new Uint8Array(e),staticAccountKeys:this.staticAccountKeys.map((e=>e.toBytes())),recentBlockhash:c().decode(this.recentBlockhash),instructionsLength:new Uint8Array(r),serializedInstructions:t,addressTableLookupsLength:new Uint8Array(s),serializedAddressTableLookups:n},o);return o.slice(0,a)}serializeInstructions(){let e=0;const t=new Uint8Array(W);for(const r of this.compiledInstructions){const n=Array();$(n,r.accountKeyIndexes.length);const s=Array();$(s,r.data.length);e+=l.struct([l.u8("programIdIndex"),l.blob(n.length,"encodedAccountKeyIndexesLength"),l.seq(l.u8(),r.accountKeyIndexes.length,"accountKeyIndexes"),l.blob(s.length,"encodedDataLength"),l.blob(r.data.length,"data")]).encode({programIdIndex:r.programIdIndex,encodedAccountKeyIndexesLength:new Uint8Array(n),accountKeyIndexes:r.accountKeyIndexes,encodedDataLength:new Uint8Array(s),data:r.data},t,e)}return t.slice(0,e)}serializeAddressTableLookups(){let e=0;const t=new Uint8Array(W);for(const r of this.addressTableLookups){const n=Array();$(n,r.writableIndexes.length);const s=Array();$(s,r.readonlyIndexes.length);e+=l.struct([D("accountKey"),l.blob(n.length,"encodedWritableIndexesLength"),l.seq(l.u8(),r.writableIndexes.length,"writableIndexes"),l.blob(s.length,"encodedReadonlyIndexesLength"),l.seq(l.u8(),r.readonlyIndexes.length,"readonlyIndexes")]).encode({accountKey:r.accountKey.toBytes(),encodedWritableIndexesLength:new Uint8Array(n),writableIndexes:r.writableIndexes,encodedReadonlyIndexesLength:new Uint8Array(s),readonlyIndexes:r.readonlyIndexes},t,e)}return t.slice(0,e)}static deserialize(e){let t=[...e];const r=t.shift(),n=r&N;X(r!==n,"Expected versioned message but received legacy message");X(0===n,`Expected versioned message with version 0 but found version ${n}`);const s={numRequiredSignatures:t.shift(),numReadonlySignedAccounts:t.shift(),numReadonlyUnsignedAccounts:t.shift()},i=[],o=Z(t);for(let c=0;c<o;c++)i.push(new z(t.splice(0,C)));const a=c().encode(t.splice(0,C)),u=Z(t),d=[];for(let c=0;c<u;c++){const e=t.shift(),r=Z(t),n=t.splice(0,r),s=Z(t),i=new Uint8Array(t.splice(0,s));d.push({programIdIndex:e,accountKeyIndexes:n,data:i})}const l=Z(t),h=[];for(let c=0;c<l;c++){const e=new z(t.splice(0,C)),r=Z(t),n=t.splice(0,r),s=Z(t),i=t.splice(0,s);h.push({accountKey:e,writableIndexes:n,readonlyIndexes:i})}return new Q({header:s,staticAccountKeys:i,recentBlockhash:a,compiledInstructions:d,addressTableLookups:h})}}const ee={deserializeMessageVersion(e){const t=e[0],r=t&N;return r===t?"legacy":r},deserialize:e=>{const t=ee.deserializeMessageVersion(e);if("legacy"===t)return Y.from(e);if(0===t)return Q.deserialize(e);throw new Error(`Transaction message version ${t} deserialization is not supported`)}};let te;!function(e){e[e.BLOCKHEIGHT_EXCEEDED=0]="BLOCKHEIGHT_EXCEEDED",e[e.PROCESSED=1]="PROCESSED",e[e.TIMED_OUT=2]="TIMED_OUT",e[e.NONCE_INVALID=3]="NONCE_INVALID"}(te||(te={}));const re=n.Buffer.alloc(U).fill(0);class ne{constructor(e){this.keys=void 0,this.programId=void 0,this.data=n.Buffer.alloc(0),this.programId=e.programId,this.keys=e.keys,e.data&&(this.data=e.data)}toJSON(){return{keys:this.keys.map((({pubkey:e,isSigner:t,isWritable:r})=>({pubkey:e.toJSON(),isSigner:t,isWritable:r}))),programId:this.programId.toJSON(),data:[...this.data]}}}class se{get signature(){return this.signatures.length>0?this.signatures[0].signature:null}constructor(e){if(this.signatures=[],this.feePayer=void 0,this.instructions=[],this.recentBlockhash=void 0,this.lastValidBlockHeight=void 0,this.nonceInfo=void 0,this.minNonceContextSlot=void 0,this._message=void 0,this._json=void 0,e)if(e.feePayer&&(this.feePayer=e.feePayer),e.signatures&&(this.signatures=e.signatures),Object.prototype.hasOwnProperty.call(e,"nonceInfo")){const{minContextSlot:t,nonceInfo:r}=e;this.minNonceContextSlot=t,this.nonceInfo=r}else if(Object.prototype.hasOwnProperty.call(e,"lastValidBlockHeight")){const{blockhash:t,lastValidBlockHeight:r}=e;this.recentBlockhash=t,this.lastValidBlockHeight=r}else{const{recentBlockhash:t,nonceInfo:r}=e;r&&(this.nonceInfo=r),this.recentBlockhash=t}}toJSON(){return{recentBlockhash:this.recentBlockhash||null,feePayer:this.feePayer?this.feePayer.toJSON():null,nonceInfo:this.nonceInfo?{nonce:this.nonceInfo.nonce,nonceInstruction:this.nonceInfo.nonceInstruction.toJSON()}:null,instructions:this.instructions.map((e=>e.toJSON())),signers:this.signatures.map((({publicKey:e})=>e.toJSON()))}}add(...e){if(0===e.length)throw new Error("No instructions");return e.forEach((e=>{"instructions"in e?this.instructions=this.instructions.concat(e.instructions):"data"in e&&"programId"in e&&"keys"in e?this.instructions.push(e):this.instructions.push(new ne(e))})),this}compileMessage(){if(this._message&&JSON.stringify(this.toJSON())===JSON.stringify(this._json))return this._message;let e,t,r;if(this.nonceInfo?(e=this.nonceInfo.nonce,t=this.instructions[0]!=this.nonceInfo.nonceInstruction?[this.nonceInfo.nonceInstruction,...this.instructions]:this.instructions):(e=this.recentBlockhash,t=this.instructions),!e)throw new Error("Transaction recentBlockhash required");if(t.length<1&&console.warn("No instructions provided"),this.feePayer)r=this.feePayer;else{if(!(this.signatures.length>0&&this.signatures[0].publicKey))throw new Error("Transaction fee payer required");r=this.signatures[0].publicKey}for(let c=0;c<t.length;c++)if(void 0===t[c].programId)throw new Error(`Transaction instruction index ${c} has undefined program id`);const n=[],s=[];t.forEach((e=>{e.keys.forEach((e=>{s.push({...e})}));const t=e.programId.toString();n.includes(t)||n.push(t)})),n.forEach((e=>{s.push({pubkey:new z(e),isSigner:!1,isWritable:!1})}));const i=[];s.forEach((e=>{const t=e.pubkey.toString(),r=i.findIndex((e=>e.pubkey.toString()===t));r>-1?(i[r].isWritable=i[r].isWritable||e.isWritable,i[r].isSigner=i[r].isSigner||e.isSigner):i.push(e)})),i.sort((function(e,t){return e.isSigner!==t.isSigner?e.isSigner?-1:1:e.isWritable!==t.isWritable?e.isWritable?-1:1:e.pubkey.toBase58().localeCompare(t.pubkey.toBase58())}));const o=i.findIndex((e=>e.pubkey.equals(r)));if(o>-1){const[e]=i.splice(o,1);e.isSigner=!0,e.isWritable=!0,i.unshift(e)}else i.unshift({pubkey:r,isSigner:!0,isWritable:!0});for(const c of this.signatures){const e=i.findIndex((e=>e.pubkey.equals(c.publicKey)));if(!(e>-1))throw new Error(`unknown signer: ${c.publicKey.toString()}`);i[e].isSigner||(i[e].isSigner=!0,console.warn("Transaction references a signature that is unnecessary, only the fee payer and instruction signer accounts should sign a transaction. This behavior is deprecated and will throw an error in the next major version release."))}let a=0,u=0,d=0;const l=[],h=[];i.forEach((({pubkey:e,isSigner:t,isWritable:r})=>{t?(l.push(e.toString()),a+=1,r||(u+=1)):(h.push(e.toString()),r||(d+=1))}));const g=l.concat(h),p=t.map((e=>{const{data:t,programId:r}=e;return{programIdIndex:g.indexOf(r.toString()),accounts:e.keys.map((e=>g.indexOf(e.pubkey.toString()))),data:c().encode(t)}}));return p.forEach((e=>{X(e.programIdIndex>=0),e.accounts.forEach((e=>X(e>=0)))})),new Y({header:{numRequiredSignatures:a,numReadonlySignedAccounts:u,numReadonlyUnsignedAccounts:d},accountKeys:g,recentBlockhash:e,instructions:p})}_compile(){const e=this.compileMessage(),t=e.accountKeys.slice(0,e.header.numRequiredSignatures);if(this.signatures.length===t.length){if(this.signatures.every(((e,r)=>t[r].equals(e.publicKey))))return e}return this.signatures=t.map((e=>({signature:null,publicKey:e}))),e}serializeMessage(){return this._compile().serialize()}async getEstimatedFee(e){return(await e.getFeeForMessage(this.compileMessage())).value}setSigners(...e){if(0===e.length)throw new Error("No signers");const t=new Set;this.signatures=e.filter((e=>{const r=e.toString();return!t.has(r)&&(t.add(r),!0)})).map((e=>({signature:null,publicKey:e})))}sign(...e){if(0===e.length)throw new Error("No signers");const t=new Set,r=[];for(const s of e){const e=s.publicKey.toString();t.has(e)||(t.add(e),r.push(s))}this.signatures=r.map((e=>({signature:null,publicKey:e.publicKey})));const n=this._compile();this._partialSign(n,...r)}partialSign(...e){if(0===e.length)throw new Error("No signers");const t=new Set,r=[];for(const s of e){const e=s.publicKey.toString();t.has(e)||(t.add(e),r.push(s))}const n=this._compile();this._partialSign(n,...r)}_partialSign(e,...t){const r=e.serialize();t.forEach((e=>{const t=A(r,e.secretKey);this._addSignature(e.publicKey,x(t))}))}addSignature(e,t){this._compile(),this._addSignature(e,t)}_addSignature(e,t){X(64===t.length);const r=this.signatures.findIndex((t=>e.equals(t.publicKey)));if(r<0)throw new Error(`unknown signer: ${e.toString()}`);this.signatures[r].signature=n.Buffer.from(t)}verifySignatures(e){return this._verifySignatures(this.serializeMessage(),void 0===e||e)}_verifySignatures(e,t){for(const{signature:r,publicKey:n}of this.signatures)if(null===r){if(t)return!1}else if(!R(r,e,n.toBytes()))return!1;return!0}serialize(e){const{requireAllSignatures:t,verifySignatures:r}=Object.assign({requireAllSignatures:!0,verifySignatures:!0},e),n=this.serializeMessage();if(r&&!this._verifySignatures(n,t))throw new Error("Signature verification failed");return this._serialize(n)}_serialize(e){const{signatures:t}=this,r=[];$(r,t.length);const s=r.length+64*t.length+e.length,i=n.Buffer.alloc(s);return X(t.length<256),n.Buffer.from(r).copy(i,0),t.forEach((({signature:e},t)=>{null!==e&&(X(64===e.length,"signature has invalid length"),n.Buffer.from(e).copy(i,r.length+64*t))})),e.copy(i,r.length+64*t.length),X(i.length<=W,`Transaction too large: ${i.length} > ${W}`),i}get keys(){return X(1===this.instructions.length),this.instructions[0].keys.map((e=>e.pubkey))}get programId(){return X(1===this.instructions.length),this.instructions[0].programId}get data(){return X(1===this.instructions.length),this.instructions[0].data}static from(e){let t=[...e];const r=Z(t);let s=[];for(let i=0;i<r;i++){const e=t.slice(0,U);t=t.slice(U),s.push(c().encode(n.Buffer.from(e)))}return se.populate(Y.from(t),s)}static populate(e,t=[]){const r=new se;return r.recentBlockhash=e.recentBlockhash,e.header.numRequiredSignatures>0&&(r.feePayer=e.accountKeys[0]),t.forEach(((t,n)=>{const s={signature:t==c().encode(re)?null:c().decode(t),publicKey:e.accountKeys[n]};r.signatures.push(s)})),e.instructions.forEach((t=>{const n=t.accounts.map((t=>{const n=e.accountKeys[t];return{pubkey:n,isSigner:r.signatures.some((e=>e.publicKey.toString()===n.toString()))||e.isAccountSigner(t),isWritable:e.isAccountWritable(t)}}));r.instructions.push(new ne({keys:n,programId:e.accountKeys[t.programIdIndex],data:c().decode(t.data)}))})),r._message=e,r._json=r.toJSON(),r}}class ie{constructor(e){this.payerKey=void 0,this.instructions=void 0,this.recentBlockhash=void 0,this.payerKey=e.payerKey,this.instructions=e.instructions,this.recentBlockhash=e.recentBlockhash}static decompile(e,t){const{header:r,compiledInstructions:n,recentBlockhash:s}=e,{numRequiredSignatures:i,numReadonlySignedAccounts:o,numReadonlyUnsignedAccounts:a}=r,c=i-o;X(c>0,"Message header is invalid");const u=e.staticAccountKeys.length-i-a;X(u>=0,"Message header is invalid");const d=e.getAccountKeys(t),l=d.get(0);if(void 0===l)throw new Error("Failed to decompile message because no account keys were found");const h=[];for(const g of n){const e=[];for(const n of g.accountKeyIndexes){const t=d.get(n);if(void 0===t)throw new Error(`Failed to find key for account key index ${n}`);let s;s=n<i?n<c:n<d.staticAccountKeys.length?n-i<u:n-d.staticAccountKeys.length<d.accountKeysFromLookups.writable.length,e.push({pubkey:t,isSigner:n<r.numRequiredSignatures,isWritable:s})}const t=d.get(g.programIdIndex);if(void 0===t)throw new Error(`Failed to find program id for program id index ${g.programIdIndex}`);h.push(new ne({programId:t,data:x(g.data),keys:e}))}return new ie({payerKey:l,instructions:h,recentBlockhash:s})}compileToLegacyMessage(){return Y.compile({payerKey:this.payerKey,recentBlockhash:this.recentBlockhash,instructions:this.instructions})}compileToV0Message(e){return Q.compile({payerKey:this.payerKey,recentBlockhash:this.recentBlockhash,instructions:this.instructions,addressLookupTableAccounts:e})}}class oe{get version(){return this.message.version}constructor(e,t){if(this.signatures=void 0,this.message=void 0,void 0!==t)X(t.length===e.header.numRequiredSignatures,"Expected signatures length to be equal to the number of required signatures"),this.signatures=t;else{const t=[];for(let r=0;r<e.header.numRequiredSignatures;r++)t.push(new Uint8Array(U));this.signatures=t}this.message=e}serialize(){const e=this.message.serialize(),t=Array();$(t,this.signatures.length);const r=l.struct([l.blob(t.length,"encodedSignaturesLength"),l.seq(M(),this.signatures.length,"signatures"),l.blob(e.length,"serializedMessage")]),n=new Uint8Array(2048),s=r.encode({encodedSignaturesLength:new Uint8Array(t),signatures:this.signatures,serializedMessage:e},n);return n.slice(0,s)}static deserialize(e){let t=[...e];const r=[],n=Z(t);for(let i=0;i<n;i++)r.push(new Uint8Array(t.splice(0,U)));const s=ee.deserialize(new Uint8Array(t));return new oe(s,r)}sign(e){const t=this.message.serialize(),r=this.message.staticAccountKeys.slice(0,this.message.header.numRequiredSignatures);for(const n of e){const e=r.findIndex((e=>e.equals(n.publicKey)));X(e>=0,`Cannot sign with non signer key ${n.publicKey.toBase58()}`),this.signatures[e]=A(t,n.secretKey)}}addSignature(e,t){X(64===t.byteLength,"Signature must be 64 bytes long");const r=this.message.staticAccountKeys.slice(0,this.message.header.numRequiredSignatures).findIndex((t=>t.equals(e)));X(r>=0,`Can not add signature; \`${e.toBase58()}\` is not required to sign this transaction`),this.signatures[r]=t}}const ae=new z("SysvarC1ock11111111111111111111111111111111"),ce=new z("SysvarEpochSchedu1e111111111111111111111111"),ue=new z("Sysvar1nstructions1111111111111111111111111"),de=new z("SysvarRecentB1ockHashes11111111111111111111"),le=new z("SysvarRent111111111111111111111111111111111"),he=new z("SysvarRewards111111111111111111111111111111"),ge=new z("SysvarS1otHashes111111111111111111111111111"),pe=new z("SysvarS1otHistory11111111111111111111111111"),ye=new z("SysvarStakeHistory1111111111111111111111111");async function me(e,t,r,n){const s=n&&{skipPreflight:n.skipPreflight,preflightCommitment:n.preflightCommitment||n.commitment,maxRetries:n.maxRetries,minContextSlot:n.minContextSlot},i=await e.sendTransaction(t,r,s);let o;if(null!=t.recentBlockhash&&null!=t.lastValidBlockHeight)o=(await e.confirmTransaction({abortSignal:n?.abortSignal,signature:i,blockhash:t.recentBlockhash,lastValidBlockHeight:t.lastValidBlockHeight},n&&n.commitment)).value;else if(null!=t.minNonceContextSlot&&null!=t.nonceInfo){const{nonceInstruction:r}=t.nonceInfo,s=r.keys[0].pubkey;o=(await e.confirmTransaction({abortSignal:n?.abortSignal,minContextSlot:t.minNonceContextSlot,nonceAccountPubkey:s,nonceValue:t.nonceInfo.nonce,signature:i},n&&n.commitment)).value}else null!=n?.abortSignal&&console.warn("sendAndConfirmTransaction(): A transaction with a deprecated confirmation strategy was supplied along with an `abortSignal`. Only transactions having `lastValidBlockHeight` or a combination of `nonceInfo` and `minNonceContextSlot` are abortable."),o=(await e.confirmTransaction(i,n&&n.commitment)).value;if(o.err)throw new Error(`Transaction ${i} failed (${JSON.stringify(o)})`);return i}function be(e){return new Promise((t=>setTimeout(t,e)))}function fe(e,t){const r=e.layout.span>=0?e.layout.span:F(e,t),s=n.Buffer.alloc(r),i=Object.assign({instruction:e.index},t);return e.layout.encode(i,s),s}function ke(e,t){let r;try{r=e.layout.decode(t)}catch(n){throw new Error("invalid instruction; "+n)}if(r.instruction!==e.index)throw new Error(`invalid instruction; instruction index mismatch ${r.instruction} != ${e.index}`);return r}const we=l.nu64("lamportsPerSignature"),Se=l.struct([l.u32("version"),l.u32("state"),D("authorizedPubkey"),D("nonce"),l.struct([we],"feeCalculator")]),Ie=Se.span;class _e{constructor(e){this.authorizedPubkey=void 0,this.nonce=void 0,this.feeCalculator=void 0,this.authorizedPubkey=e.authorizedPubkey,this.nonce=e.nonce,this.feeCalculator=e.feeCalculator}static fromAccountData(e){const t=Se.decode(x(e),0);return new _e({authorizedPubkey:new z(t.authorizedPubkey),nonce:new z(t.nonce).toString(),feeCalculator:t.feeCalculator})}}const Ae=(Re=8,e=>{const t=(0,l.blob)(Re,e),{encode:r,decode:s}=(e=>({decode:e.decode.bind(e),encode:e.encode.bind(e)}))(t),i=t;return i.decode=(e,t)=>{const r=s(e,t);return(0,h.toBigIntLE)(n.Buffer.from(r))},i.encode=(e,t,n)=>{const s=(0,h.toBufferLE)(e,Re);return r(s,t,n)},i});var Re;class xe{constructor(){}static decodeInstructionType(e){this.checkProgramId(e.programId);const t=l.u32("instruction").decode(e.data);let r;for(const[n,s]of Object.entries(Pe))if(s.index==t){r=n;break}if(!r)throw new Error("Instruction type incorrect; not a SystemInstruction");return r}static decodeCreateAccount(e){this.checkProgramId(e.programId),this.checkKeyLength(e.keys,2);const{lamports:t,space:r,programId:n}=ke(Pe.Create,e.data);return{fromPubkey:e.keys[0].pubkey,newAccountPubkey:e.keys[1].pubkey,lamports:t,space:r,programId:new z(n)}}static decodeTransfer(e){this.checkProgramId(e.programId),this.checkKeyLength(e.keys,2);const{lamports:t}=ke(Pe.Transfer,e.data);return{fromPubkey:e.keys[0].pubkey,toPubkey:e.keys[1].pubkey,lamports:t}}static decodeTransferWithSeed(e){this.checkProgramId(e.programId),this.checkKeyLength(e.keys,3);const{lamports:t,seed:r,programId:n}=ke(Pe.TransferWithSeed,e.data);return{fromPubkey:e.keys[0].pubkey,basePubkey:e.keys[1].pubkey,toPubkey:e.keys[2].pubkey,lamports:t,seed:r,programId:new z(n)}}static decodeAllocate(e){this.checkProgramId(e.programId),this.checkKeyLength(e.keys,1);const{space:t}=ke(Pe.Allocate,e.data);return{accountPubkey:e.keys[0].pubkey,space:t}}static decodeAllocateWithSeed(e){this.checkProgramId(e.programId),this.checkKeyLength(e.keys,1);const{base:t,seed:r,space:n,programId:s}=ke(Pe.AllocateWithSeed,e.data);return{accountPubkey:e.keys[0].pubkey,basePubkey:new z(t),seed:r,space:n,programId:new z(s)}}static decodeAssign(e){this.checkProgramId(e.programId),this.checkKeyLength(e.keys,1);const{programId:t}=ke(Pe.Assign,e.data);return{accountPubkey:e.keys[0].pubkey,programId:new z(t)}}static decodeAssignWithSeed(e){this.checkProgramId(e.programId),this.checkKeyLength(e.keys,1);const{base:t,seed:r,programId:n}=ke(Pe.AssignWithSeed,e.data);return{accountPubkey:e.keys[0].pubkey,basePubkey:new z(t),seed:r,programId:new z(n)}}static decodeCreateWithSeed(e){this.checkProgramId(e.programId),this.checkKeyLength(e.keys,2);const{base:t,seed:r,lamports:n,space:s,programId:i}=ke(Pe.CreateWithSeed,e.data);return{fromPubkey:e.keys[0].pubkey,newAccountPubkey:e.keys[1].pubkey,basePubkey:new z(t),seed:r,lamports:n,space:s,programId:new z(i)}}static decodeNonceInitialize(e){this.checkProgramId(e.programId),this.checkKeyLength(e.keys,3);const{authorized:t}=ke(Pe.InitializeNonceAccount,e.data);return{noncePubkey:e.keys[0].pubkey,authorizedPubkey:new z(t)}}static decodeNonceAdvance(e){return this.checkProgramId(e.programId),this.checkKeyLength(e.keys,3),ke(Pe.AdvanceNonceAccount,e.data),{noncePubkey:e.keys[0].pubkey,authorizedPubkey:e.keys[2].pubkey}}static decodeNonceWithdraw(e){this.checkProgramId(e.programId),this.checkKeyLength(e.keys,5);const{lamports:t}=ke(Pe.WithdrawNonceAccount,e.data);return{noncePubkey:e.keys[0].pubkey,toPubkey:e.keys[1].pubkey,authorizedPubkey:e.keys[4].pubkey,lamports:t}}static decodeNonceAuthorize(e){this.checkProgramId(e.programId),this.checkKeyLength(e.keys,2);const{authorized:t}=ke(Pe.AuthorizeNonceAccount,e.data);return{noncePubkey:e.keys[0].pubkey,authorizedPubkey:e.keys[1].pubkey,newAuthorizedPubkey:new z(t)}}static checkProgramId(e){if(!e.equals(ve.programId))throw new Error("invalid instruction; programId is not SystemProgram")}static checkKeyLength(e,t){if(e.length<t)throw new Error(`invalid instruction; found ${e.length} keys, expected at least ${t}`)}}const Pe=Object.freeze({Create:{index:0,layout:l.struct([l.u32("instruction"),l.ns64("lamports"),l.ns64("space"),D("programId")])},Assign:{index:1,layout:l.struct([l.u32("instruction"),D("programId")])},Transfer:{index:2,layout:l.struct([l.u32("instruction"),Ae("lamports")])},CreateWithSeed:{index:3,layout:l.struct([l.u32("instruction"),D("base"),H("seed"),l.ns64("lamports"),l.ns64("space"),D("programId")])},AdvanceNonceAccount:{index:4,layout:l.struct([l.u32("instruction")])},WithdrawNonceAccount:{index:5,layout:l.struct([l.u32("instruction"),l.ns64("lamports")])},InitializeNonceAccount:{index:6,layout:l.struct([l.u32("instruction"),D("authorized")])},AuthorizeNonceAccount:{index:7,layout:l.struct([l.u32("instruction"),D("authorized")])},Allocate:{index:8,layout:l.struct([l.u32("instruction"),l.ns64("space")])},AllocateWithSeed:{index:9,layout:l.struct([l.u32("instruction"),D("base"),H("seed"),l.ns64("space"),D("programId")])},AssignWithSeed:{index:10,layout:l.struct([l.u32("instruction"),D("base"),H("seed"),D("programId")])},TransferWithSeed:{index:11,layout:l.struct([l.u32("instruction"),Ae("lamports"),H("seed"),D("programId")])},UpgradeNonceAccount:{index:12,layout:l.struct([l.u32("instruction")])}});class ve{constructor(){}static createAccount(e){const t=fe(Pe.Create,{lamports:e.lamports,space:e.space,programId:x(e.programId.toBuffer())});return new ne({keys:[{pubkey:e.fromPubkey,isSigner:!0,isWritable:!0},{pubkey:e.newAccountPubkey,isSigner:!0,isWritable:!0}],programId:this.programId,data:t})}static transfer(e){let t,r;if("basePubkey"in e){t=fe(Pe.TransferWithSeed,{lamports:BigInt(e.lamports),seed:e.seed,programId:x(e.programId.toBuffer())}),r=[{pubkey:e.fromPubkey,isSigner:!1,isWritable:!0},{pubkey:e.basePubkey,isSigner:!0,isWritable:!1},{pubkey:e.toPubkey,isSigner:!1,isWritable:!0}]}else{t=fe(Pe.Transfer,{lamports:BigInt(e.lamports)}),r=[{pubkey:e.fromPubkey,isSigner:!0,isWritable:!0},{pubkey:e.toPubkey,isSigner:!1,isWritable:!0}]}return new ne({keys:r,programId:this.programId,data:t})}static assign(e){let t,r;if("basePubkey"in e){t=fe(Pe.AssignWithSeed,{base:x(e.basePubkey.toBuffer()),seed:e.seed,programId:x(e.programId.toBuffer())}),r=[{pubkey:e.accountPubkey,isSigner:!1,isWritable:!0},{pubkey:e.basePubkey,isSigner:!0,isWritable:!1}]}else{t=fe(Pe.Assign,{programId:x(e.programId.toBuffer())}),r=[{pubkey:e.accountPubkey,isSigner:!0,isWritable:!0}]}return new ne({keys:r,programId:this.programId,data:t})}static createAccountWithSeed(e){const t=fe(Pe.CreateWithSeed,{base:x(e.basePubkey.toBuffer()),seed:e.seed,lamports:e.lamports,space:e.space,programId:x(e.programId.toBuffer())});let r=[{pubkey:e.fromPubkey,isSigner:!0,isWritable:!0},{pubkey:e.newAccountPubkey,isSigner:!1,isWritable:!0}];return e.basePubkey!=e.fromPubkey&&r.push({pubkey:e.basePubkey,isSigner:!0,isWritable:!1}),new ne({keys:r,programId:this.programId,data:t})}static createNonceAccount(e){const t=new se;"basePubkey"in e&&"seed"in e?t.add(ve.createAccountWithSeed({fromPubkey:e.fromPubkey,newAccountPubkey:e.noncePubkey,basePubkey:e.basePubkey,seed:e.seed,lamports:e.lamports,space:Ie,programId:this.programId})):t.add(ve.createAccount({fromPubkey:e.fromPubkey,newAccountPubkey:e.noncePubkey,lamports:e.lamports,space:Ie,programId:this.programId}));const r={noncePubkey:e.noncePubkey,authorizedPubkey:e.authorizedPubkey};return t.add(this.nonceInitialize(r)),t}static nonceInitialize(e){const t=fe(Pe.InitializeNonceAccount,{authorized:x(e.authorizedPubkey.toBuffer())}),r={keys:[{pubkey:e.noncePubkey,isSigner:!1,isWritable:!0},{pubkey:de,isSigner:!1,isWritable:!1},{pubkey:le,isSigner:!1,isWritable:!1}],programId:this.programId,data:t};return new ne(r)}static nonceAdvance(e){const t=fe(Pe.AdvanceNonceAccount),r={keys:[{pubkey:e.noncePubkey,isSigner:!1,isWritable:!0},{pubkey:de,isSigner:!1,isWritable:!1},{pubkey:e.authorizedPubkey,isSigner:!0,isWritable:!1}],programId:this.programId,data:t};return new ne(r)}static nonceWithdraw(e){const t=fe(Pe.WithdrawNonceAccount,{lamports:e.lamports});return new ne({keys:[{pubkey:e.noncePubkey,isSigner:!1,isWritable:!0},{pubkey:e.toPubkey,isSigner:!1,isWritable:!0},{pubkey:de,isSigner:!1,isWritable:!1},{pubkey:le,isSigner:!1,isWritable:!1},{pubkey:e.authorizedPubkey,isSigner:!0,isWritable:!1}],programId:this.programId,data:t})}static nonceAuthorize(e){const t=fe(Pe.AuthorizeNonceAccount,{authorized:x(e.newAuthorizedPubkey.toBuffer())});return new ne({keys:[{pubkey:e.noncePubkey,isSigner:!1,isWritable:!0},{pubkey:e.authorizedPubkey,isSigner:!0,isWritable:!1}],programId:this.programId,data:t})}static allocate(e){let t,r;if("basePubkey"in e){t=fe(Pe.AllocateWithSeed,{base:x(e.basePubkey.toBuffer()),seed:e.seed,space:e.space,programId:x(e.programId.toBuffer())}),r=[{pubkey:e.accountPubkey,isSigner:!1,isWritable:!0},{pubkey:e.basePubkey,isSigner:!0,isWritable:!1}]}else{t=fe(Pe.Allocate,{space:e.space}),r=[{pubkey:e.accountPubkey,isSigner:!0,isWritable:!0}]}return new ne({keys:r,programId:this.programId,data:t})}}ve.programId=new z("11111111111111111111111111111111");const Ee=W-300;class Be{constructor(){}static getMinNumSignatures(e){return 2*(Math.ceil(e/Be.chunkSize)+1+1)}static async load(e,t,r,s,i){{const n=await e.getMinimumBalanceForRentExemption(i.length),o=await e.getAccountInfo(r.publicKey,"confirmed");let a=null;if(null!==o){if(o.executable)return console.error("Program load failed, account is already executable"),!1;o.data.length!==i.length&&(a=a||new se,a.add(ve.allocate({accountPubkey:r.publicKey,space:i.length}))),o.owner.equals(s)||(a=a||new se,a.add(ve.assign({accountPubkey:r.publicKey,programId:s}))),o.lamports<n&&(a=a||new se,a.add(ve.transfer({fromPubkey:t.publicKey,toPubkey:r.publicKey,lamports:n-o.lamports})))}else a=(new se).add(ve.createAccount({fromPubkey:t.publicKey,newAccountPubkey:r.publicKey,lamports:n>0?n:1,space:i.length,programId:s}));null!==a&&await me(e,a,[t,r],{commitment:"confirmed"})}const o=l.struct([l.u32("instruction"),l.u32("offset"),l.u32("bytesLength"),l.u32("bytesLengthPadding"),l.seq(l.u8("byte"),l.offset(l.u32(),-8),"bytes")]),a=Be.chunkSize;let c=0,u=i,d=[];for(;u.length>0;){const i=u.slice(0,a),l=n.Buffer.alloc(a+16);o.encode({instruction:0,offset:c,bytes:i,bytesLength:0,bytesLengthPadding:0},l);const h=(new se).add({keys:[{pubkey:r.publicKey,isSigner:!0,isWritable:!0}],programId:s,data:l});if(d.push(me(e,h,[t,r],{commitment:"confirmed"})),e._rpcEndpoint.includes("solana.com")){const e=4;await be(1e3/e)}c+=a,u=u.slice(a)}await Promise.all(d);{const i=l.struct([l.u32("instruction")]),o=n.Buffer.alloc(i.span);i.encode({instruction:1},o);const a=(new se).add({keys:[{pubkey:r.publicKey,isSigner:!0,isWritable:!0},{pubkey:le,isSigner:!1,isWritable:!1}],programId:s,data:o});await me(e,a,[t,r],{commitment:"confirmed"})}return!0}}Be.chunkSize=Ee;const Te=new z("BPFLoader2111111111111111111111111111111111");class Ce{static getMinNumSignatures(e){return Be.getMinNumSignatures(e)}static load(e,t,r,n,s){return Be.load(e,t,r,s,n)}}var Le=Object.prototype.toString,ze=Object.keys||function(e){var t=[];for(var r in e)t.push(r);return t};function Ke(e,t){var r,n,s,i,o,a,c;if(!0===e)return"true";if(!1===e)return"false";switch(typeof e){case"object":if(null===e)return null;if(e.toJSON&&"function"===typeof e.toJSON)return Ke(e.toJSON(),t);if("[object Array]"===(c=Le.call(e))){for(s="[",n=e.length-1,r=0;r<n;r++)s+=Ke(e[r],!0)+",";return n>-1&&(s+=Ke(e[r],!0)),s+"]"}if("[object Object]"===c){for(n=(i=ze(e).sort()).length,s="",r=0;r<n;)void 0!==(a=Ke(e[o=i[r]],!1))&&(s&&(s+=","),s+=JSON.stringify(o)+":"+a),r++;return"{"+s+"}"}return JSON.stringify(e);case"function":case"undefined":return t?null:void 0;case"string":return JSON.stringify(e);default:return isFinite(e)?e:null}}var Oe=function(e){var t=Ke(e,!1);if(void 0!==t)return""+t};function We(e){let t=0;for(;e>1;)e/=2,t++;return t}class Ne{constructor(e,t,r,n,s){this.slotsPerEpoch=void 0,this.leaderScheduleSlotOffset=void 0,this.warmup=void 0,this.firstNormalEpoch=void 0,this.firstNormalSlot=void 0,this.slotsPerEpoch=e,this.leaderScheduleSlotOffset=t,this.warmup=r,this.firstNormalEpoch=n,this.firstNormalSlot=s}getEpoch(e){return this.getEpochAndSlotIndex(e)[0]}getEpochAndSlotIndex(e){if(e<this.firstNormalSlot){const r=We(0===(t=e+32+1)?1:(t--,t|=t>>1,t|=t>>2,t|=t>>4,t|=t>>8,t|=t>>16,1+(t|=t>>32)))-We(32)-1;return[r,e-(this.getSlotsInEpoch(r)-32)]}{const t=e-this.firstNormalSlot,r=Math.floor(t/this.slotsPerEpoch);return[this.firstNormalEpoch+r,t%this.slotsPerEpoch]}var t}getFirstSlotInEpoch(e){return e<=this.firstNormalEpoch?32*(Math.pow(2,e)-1):(e-this.firstNormalEpoch)*this.slotsPerEpoch+this.firstNormalSlot}getLastSlotInEpoch(e){return this.getFirstSlotInEpoch(e)+this.getSlotsInEpoch(e)-1}getSlotsInEpoch(e){return e<this.firstNormalEpoch?Math.pow(2,e+We(32)):this.slotsPerEpoch}}class Ue extends Error{constructor(e,t){super(e),this.logs=void 0,this.logs=t}}const qe={JSON_RPC_SERVER_ERROR_BLOCK_CLEANED_UP:-32001,JSON_RPC_SERVER_ERROR_SEND_TRANSACTION_PREFLIGHT_FAILURE:-32002,JSON_RPC_SERVER_ERROR_TRANSACTION_SIGNATURE_VERIFICATION_FAILURE:-32003,JSON_RPC_SERVER_ERROR_BLOCK_NOT_AVAILABLE:-32004,JSON_RPC_SERVER_ERROR_NODE_UNHEALTHY:-32005,JSON_RPC_SERVER_ERROR_TRANSACTION_PRECOMPILE_VERIFICATION_FAILURE:-32006,JSON_RPC_SERVER_ERROR_SLOT_SKIPPED:-32007,JSON_RPC_SERVER_ERROR_NO_SNAPSHOT:-32008,JSON_RPC_SERVER_ERROR_LONG_TERM_STORAGE_SLOT_SKIPPED:-32009,JSON_RPC_SERVER_ERROR_KEY_EXCLUDED_FROM_SECONDARY_INDEX:-32010,JSON_RPC_SERVER_ERROR_TRANSACTION_HISTORY_NOT_AVAILABLE:-32011,JSON_RPC_SCAN_ERROR:-32012,JSON_RPC_SERVER_ERROR_TRANSACTION_SIGNATURE_LEN_MISMATCH:-32013,JSON_RPC_SERVER_ERROR_BLOCK_STATUS_NOT_AVAILABLE_YET:-32014,JSON_RPC_SERVER_ERROR_UNSUPPORTED_TRANSACTION_VERSION:-32015,JSON_RPC_SERVER_ERROR_MIN_CONTEXT_SLOT_NOT_REACHED:-32016};class Ge extends Error{constructor({code:e,message:t,data:r},n){super(null!=n?`${n}: ${t}`:t),this.code=void 0,this.data=void 0,this.code=e,this.data=r,this.name="SolanaJSONRPCError"}}var je=globalThis.fetch;class Ve extends m.Z{constructor(e,t,r){super((e=>{const r=(0,b.Z)(e,{autoconnect:!0,max_reconnects:5,reconnect:!0,reconnect_interval:1e3,...t});return this.underlyingSocket="socket"in r?r.socket:r,r}),e,t,r),this.underlyingSocket=void 0}call(...e){const t=this.underlyingSocket?.readyState;return 1===t?super.call(...e):Promise.reject(new Error("Tried to call a JSON-RPC method `"+e[0]+"` but the socket was not `CONNECTING` or `OPEN` (`readyState` was "+t+")"))}notify(...e){const t=this.underlyingSocket?.readyState;return 1===t?super.notify(...e):Promise.reject(new Error("Tried to send a JSON-RPC notification `"+e[0]+"` but the socket was not `CONNECTING` or `OPEN` (`readyState` was "+t+")"))}}class De{constructor(e){this.key=void 0,this.state=void 0,this.key=e.key,this.state=e.state}isActive(){const e=BigInt("0xffffffffffffffff");return this.state.deactivationSlot===e}static deserialize(e){const t=function(e,t){let r;try{r=e.layout.decode(t)}catch(n){throw new Error("invalid instruction; "+n)}if(r.typeIndex!==e.index)throw new Error(`invalid account data; account type mismatch ${r.typeIndex} != ${e.index}`);return r}(Me,e),r=e.length-56;X(r>=0,"lookup table is invalid"),X(r%32===0,"lookup table is invalid");const n=r/32,{addresses:s}=l.struct([l.seq(D(),n,"addresses")]).decode(e.slice(56));return{deactivationSlot:t.deactivationSlot,lastExtendedSlot:t.lastExtendedSlot,lastExtendedSlotStartIndex:t.lastExtendedStartIndex,authority:0!==t.authority.length?new z(t.authority[0]):void 0,addresses:s.map((e=>new z(e)))}}}const Me={index:1,layout:l.struct([l.u32("typeIndex"),Ae("deactivationSlot"),l.nu64("lastExtendedSlot"),l.u8("lastExtendedStartIndex"),l.u8(),l.seq(D(),l.offset(l.u8(),-1),"authority")])},He=/^[^:]+:\/\/([^:[]+|\[[^\]]+\])(:\d+)?(.*)/i;const Fe=(0,g.oQ)((0,g.eE)(z),(0,g.Z_)(),(e=>new z(e))),Ze=(0,g.bc)([(0,g.Z_)(),(0,g.i0)("base64")]),$e=(0,g.oQ)((0,g.eE)(n.Buffer),Ze,(e=>n.Buffer.from(e[0],"base64"))),Xe=3e4;function Je(e){let t,r;if("string"===typeof e)t=e;else if(e){const{commitment:n,...s}=e;t=n,r=s}return{commitment:t,config:r}}function Ye(e){return(0,g.G0)([(0,g.dt)({jsonrpc:(0,g.i0)("2.0"),id:(0,g.Z_)(),result:e}),(0,g.dt)({jsonrpc:(0,g.i0)("2.0"),id:(0,g.Z_)(),error:(0,g.dt)({code:(0,g._4)(),message:(0,g.Z_)(),data:(0,g.jt)((0,g.Yj)())})})])}const Qe=Ye((0,g._4)());function et(e){return(0,g.oQ)(Ye(e),Qe,(t=>"error"in t?t:{...t,result:(0,g.Ue)(t.result,e)}))}function tt(e){return et((0,g.dt)({context:(0,g.dt)({slot:(0,g.Rx)()}),value:e}))}function rt(e){return(0,g.dt)({context:(0,g.dt)({slot:(0,g.Rx)()}),value:e})}function nt(e,t){return 0===e?new Q({header:t.header,staticAccountKeys:t.accountKeys.map((e=>new z(e))),recentBlockhash:t.recentBlockhash,compiledInstructions:t.instructions.map((e=>({programIdIndex:e.programIdIndex,accountKeyIndexes:e.accounts,data:c().decode(e.data)}))),addressTableLookups:t.addressTableLookups}):new Y(t)}const st=(0,g.dt)({foundation:(0,g.Rx)(),foundationTerm:(0,g.Rx)(),initial:(0,g.Rx)(),taper:(0,g.Rx)(),terminal:(0,g.Rx)()}),it=et((0,g.IX)((0,g.AG)((0,g.dt)({epoch:(0,g.Rx)(),effectiveSlot:(0,g.Rx)(),amount:(0,g.Rx)(),postBalance:(0,g.Rx)(),commission:(0,g.jt)((0,g.AG)((0,g.Rx)()))})))),ot=(0,g.IX)((0,g.dt)({slot:(0,g.Rx)(),prioritizationFee:(0,g.Rx)()})),at=(0,g.dt)({total:(0,g.Rx)(),validator:(0,g.Rx)(),foundation:(0,g.Rx)(),epoch:(0,g.Rx)()}),ct=(0,g.dt)({epoch:(0,g.Rx)(),slotIndex:(0,g.Rx)(),slotsInEpoch:(0,g.Rx)(),absoluteSlot:(0,g.Rx)(),blockHeight:(0,g.jt)((0,g.Rx)()),transactionCount:(0,g.jt)((0,g.Rx)())}),ut=(0,g.dt)({slotsPerEpoch:(0,g.Rx)(),leaderScheduleSlotOffset:(0,g.Rx)(),warmup:(0,g.O7)(),firstNormalEpoch:(0,g.Rx)(),firstNormalSlot:(0,g.Rx)()}),dt=(0,g.IM)((0,g.Z_)(),(0,g.IX)((0,g.Rx)())),lt=(0,g.AG)((0,g.G0)([(0,g.dt)({}),(0,g.Z_)()])),ht=(0,g.dt)({err:lt}),gt=(0,g.i0)("receivedSignature"),pt=(0,g.dt)({"solana-core":(0,g.Z_)(),"feature-set":(0,g.jt)((0,g.Rx)())}),yt=tt((0,g.dt)({err:(0,g.AG)((0,g.G0)([(0,g.dt)({}),(0,g.Z_)()])),logs:(0,g.AG)((0,g.IX)((0,g.Z_)())),accounts:(0,g.jt)((0,g.AG)((0,g.IX)((0,g.AG)((0,g.dt)({executable:(0,g.O7)(),owner:(0,g.Z_)(),lamports:(0,g.Rx)(),data:(0,g.IX)((0,g.Z_)()),rentEpoch:(0,g.jt)((0,g.Rx)())}))))),unitsConsumed:(0,g.jt)((0,g.Rx)()),returnData:(0,g.jt)((0,g.AG)((0,g.dt)({programId:(0,g.Z_)(),data:(0,g.bc)([(0,g.Z_)(),(0,g.i0)("base64")])})))})),mt=tt((0,g.dt)({byIdentity:(0,g.IM)((0,g.Z_)(),(0,g.IX)((0,g.Rx)())),range:(0,g.dt)({firstSlot:(0,g.Rx)(),lastSlot:(0,g.Rx)()})}));const bt=et(st),ft=et(at),kt=et(ot),wt=et(ct),St=et(ut),It=et(dt),_t=et((0,g.Rx)()),At=tt((0,g.dt)({total:(0,g.Rx)(),circulating:(0,g.Rx)(),nonCirculating:(0,g.Rx)(),nonCirculatingAccounts:(0,g.IX)(Fe)})),Rt=(0,g.dt)({amount:(0,g.Z_)(),uiAmount:(0,g.AG)((0,g.Rx)()),decimals:(0,g.Rx)(),uiAmountString:(0,g.jt)((0,g.Z_)())}),xt=tt((0,g.IX)((0,g.dt)({address:Fe,amount:(0,g.Z_)(),uiAmount:(0,g.AG)((0,g.Rx)()),decimals:(0,g.Rx)(),uiAmountString:(0,g.jt)((0,g.Z_)())}))),Pt=tt((0,g.IX)((0,g.dt)({pubkey:Fe,account:(0,g.dt)({executable:(0,g.O7)(),owner:Fe,lamports:(0,g.Rx)(),data:$e,rentEpoch:(0,g.Rx)()})}))),vt=(0,g.dt)({program:(0,g.Z_)(),parsed:(0,g._4)(),space:(0,g.Rx)()}),Et=tt((0,g.IX)((0,g.dt)({pubkey:Fe,account:(0,g.dt)({executable:(0,g.O7)(),owner:Fe,lamports:(0,g.Rx)(),data:vt,rentEpoch:(0,g.Rx)()})}))),Bt=tt((0,g.IX)((0,g.dt)({lamports:(0,g.Rx)(),address:Fe}))),Tt=(0,g.dt)({executable:(0,g.O7)(),owner:Fe,lamports:(0,g.Rx)(),data:$e,rentEpoch:(0,g.Rx)()}),Ct=(0,g.dt)({pubkey:Fe,account:Tt}),Lt=(0,g.oQ)((0,g.G0)([(0,g.eE)(n.Buffer),vt]),(0,g.G0)([Ze,vt]),(e=>Array.isArray(e)?(0,g.Ue)(e,$e):e)),zt=(0,g.dt)({executable:(0,g.O7)(),owner:Fe,lamports:(0,g.Rx)(),data:Lt,rentEpoch:(0,g.Rx)()}),Kt=(0,g.dt)({pubkey:Fe,account:zt}),Ot=(0,g.dt)({state:(0,g.G0)([(0,g.i0)("active"),(0,g.i0)("inactive"),(0,g.i0)("activating"),(0,g.i0)("deactivating")]),active:(0,g.Rx)(),inactive:(0,g.Rx)()}),Wt=et((0,g.IX)((0,g.dt)({signature:(0,g.Z_)(),slot:(0,g.Rx)(),err:lt,memo:(0,g.AG)((0,g.Z_)()),blockTime:(0,g.jt)((0,g.AG)((0,g.Rx)()))}))),Nt=et((0,g.IX)((0,g.dt)({signature:(0,g.Z_)(),slot:(0,g.Rx)(),err:lt,memo:(0,g.AG)((0,g.Z_)()),blockTime:(0,g.jt)((0,g.AG)((0,g.Rx)()))}))),Ut=(0,g.dt)({subscription:(0,g.Rx)(),result:rt(Tt)}),qt=(0,g.dt)({pubkey:Fe,account:Tt}),Gt=(0,g.dt)({subscription:(0,g.Rx)(),result:rt(qt)}),jt=(0,g.dt)({parent:(0,g.Rx)(),slot:(0,g.Rx)(),root:(0,g.Rx)()}),Vt=(0,g.dt)({subscription:(0,g.Rx)(),result:jt}),Dt=(0,g.G0)([(0,g.dt)({type:(0,g.G0)([(0,g.i0)("firstShredReceived"),(0,g.i0)("completed"),(0,g.i0)("optimisticConfirmation"),(0,g.i0)("root")]),slot:(0,g.Rx)(),timestamp:(0,g.Rx)()}),(0,g.dt)({type:(0,g.i0)("createdBank"),parent:(0,g.Rx)(),slot:(0,g.Rx)(),timestamp:(0,g.Rx)()}),(0,g.dt)({type:(0,g.i0)("frozen"),slot:(0,g.Rx)(),timestamp:(0,g.Rx)(),stats:(0,g.dt)({numTransactionEntries:(0,g.Rx)(),numSuccessfulTransactions:(0,g.Rx)(),numFailedTransactions:(0,g.Rx)(),maxTransactionsPerEntry:(0,g.Rx)()})}),(0,g.dt)({type:(0,g.i0)("dead"),slot:(0,g.Rx)(),timestamp:(0,g.Rx)(),err:(0,g.Z_)()})]),Mt=(0,g.dt)({subscription:(0,g.Rx)(),result:Dt}),Ht=(0,g.dt)({subscription:(0,g.Rx)(),result:rt((0,g.G0)([ht,gt]))}),Ft=(0,g.dt)({subscription:(0,g.Rx)(),result:(0,g.Rx)()}),Zt=(0,g.dt)({pubkey:(0,g.Z_)(),gossip:(0,g.AG)((0,g.Z_)()),tpu:(0,g.AG)((0,g.Z_)()),rpc:(0,g.AG)((0,g.Z_)()),version:(0,g.AG)((0,g.Z_)())}),$t=(0,g.dt)({votePubkey:(0,g.Z_)(),nodePubkey:(0,g.Z_)(),activatedStake:(0,g.Rx)(),epochVoteAccount:(0,g.O7)(),epochCredits:(0,g.IX)((0,g.bc)([(0,g.Rx)(),(0,g.Rx)(),(0,g.Rx)()])),commission:(0,g.Rx)(),lastVote:(0,g.Rx)(),rootSlot:(0,g.AG)((0,g.Rx)())}),Xt=et((0,g.dt)({current:(0,g.IX)($t),delinquent:(0,g.IX)($t)})),Jt=(0,g.G0)([(0,g.i0)("processed"),(0,g.i0)("confirmed"),(0,g.i0)("finalized")]),Yt=(0,g.dt)({slot:(0,g.Rx)(),confirmations:(0,g.AG)((0,g.Rx)()),err:lt,confirmationStatus:(0,g.jt)(Jt)}),Qt=tt((0,g.IX)((0,g.AG)(Yt))),er=et((0,g.Rx)()),tr=(0,g.dt)({accountKey:Fe,writableIndexes:(0,g.IX)((0,g.Rx)()),readonlyIndexes:(0,g.IX)((0,g.Rx)())}),rr=(0,g.dt)({signatures:(0,g.IX)((0,g.Z_)()),message:(0,g.dt)({accountKeys:(0,g.IX)((0,g.Z_)()),header:(0,g.dt)({numRequiredSignatures:(0,g.Rx)(),numReadonlySignedAccounts:(0,g.Rx)(),numReadonlyUnsignedAccounts:(0,g.Rx)()}),instructions:(0,g.IX)((0,g.dt)({accounts:(0,g.IX)((0,g.Rx)()),data:(0,g.Z_)(),programIdIndex:(0,g.Rx)()})),recentBlockhash:(0,g.Z_)(),addressTableLookups:(0,g.jt)((0,g.IX)(tr))})}),nr=(0,g.dt)({pubkey:Fe,signer:(0,g.O7)(),writable:(0,g.O7)(),source:(0,g.jt)((0,g.G0)([(0,g.i0)("transaction"),(0,g.i0)("lookupTable")]))}),sr=(0,g.dt)({accountKeys:(0,g.IX)(nr),signatures:(0,g.IX)((0,g.Z_)())}),ir=(0,g.dt)({parsed:(0,g._4)(),program:(0,g.Z_)(),programId:Fe}),or=(0,g.dt)({accounts:(0,g.IX)(Fe),data:(0,g.Z_)(),programId:Fe}),ar=(0,g.G0)([or,ir]),cr=(0,g.G0)([(0,g.dt)({parsed:(0,g._4)(),program:(0,g.Z_)(),programId:(0,g.Z_)()}),(0,g.dt)({accounts:(0,g.IX)((0,g.Z_)()),data:(0,g.Z_)(),programId:(0,g.Z_)()})]),ur=(0,g.oQ)(ar,cr,(e=>"accounts"in e?(0,g.Ue)(e,or):(0,g.Ue)(e,ir))),dr=(0,g.dt)({signatures:(0,g.IX)((0,g.Z_)()),message:(0,g.dt)({accountKeys:(0,g.IX)(nr),instructions:(0,g.IX)(ur),recentBlockhash:(0,g.Z_)(),addressTableLookups:(0,g.jt)((0,g.AG)((0,g.IX)(tr)))})}),lr=(0,g.dt)({accountIndex:(0,g.Rx)(),mint:(0,g.Z_)(),owner:(0,g.jt)((0,g.Z_)()),uiTokenAmount:Rt}),hr=(0,g.dt)({writable:(0,g.IX)(Fe),readonly:(0,g.IX)(Fe)}),gr=(0,g.dt)({err:lt,fee:(0,g.Rx)(),innerInstructions:(0,g.jt)((0,g.AG)((0,g.IX)((0,g.dt)({index:(0,g.Rx)(),instructions:(0,g.IX)((0,g.dt)({accounts:(0,g.IX)((0,g.Rx)()),data:(0,g.Z_)(),programIdIndex:(0,g.Rx)()}))})))),preBalances:(0,g.IX)((0,g.Rx)()),postBalances:(0,g.IX)((0,g.Rx)()),logMessages:(0,g.jt)((0,g.AG)((0,g.IX)((0,g.Z_)()))),preTokenBalances:(0,g.jt)((0,g.AG)((0,g.IX)(lr))),postTokenBalances:(0,g.jt)((0,g.AG)((0,g.IX)(lr))),loadedAddresses:(0,g.jt)(hr),computeUnitsConsumed:(0,g.jt)((0,g.Rx)())}),pr=(0,g.dt)({err:lt,fee:(0,g.Rx)(),innerInstructions:(0,g.jt)((0,g.AG)((0,g.IX)((0,g.dt)({index:(0,g.Rx)(),instructions:(0,g.IX)(ur)})))),preBalances:(0,g.IX)((0,g.Rx)()),postBalances:(0,g.IX)((0,g.Rx)()),logMessages:(0,g.jt)((0,g.AG)((0,g.IX)((0,g.Z_)()))),preTokenBalances:(0,g.jt)((0,g.AG)((0,g.IX)(lr))),postTokenBalances:(0,g.jt)((0,g.AG)((0,g.IX)(lr))),loadedAddresses:(0,g.jt)(hr),computeUnitsConsumed:(0,g.jt)((0,g.Rx)())}),yr=(0,g.G0)([(0,g.i0)(0),(0,g.i0)("legacy")]),mr=(0,g.dt)({pubkey:(0,g.Z_)(),lamports:(0,g.Rx)(),postBalance:(0,g.AG)((0,g.Rx)()),rewardType:(0,g.AG)((0,g.Z_)()),commission:(0,g.jt)((0,g.AG)((0,g.Rx)()))}),br=et((0,g.AG)((0,g.dt)({blockhash:(0,g.Z_)(),previousBlockhash:(0,g.Z_)(),parentSlot:(0,g.Rx)(),transactions:(0,g.IX)((0,g.dt)({transaction:rr,meta:(0,g.AG)(gr),version:(0,g.jt)(yr)})),rewards:(0,g.jt)((0,g.IX)(mr)),blockTime:(0,g.AG)((0,g.Rx)()),blockHeight:(0,g.AG)((0,g.Rx)())}))),fr=et((0,g.AG)((0,g.dt)({blockhash:(0,g.Z_)(),previousBlockhash:(0,g.Z_)(),parentSlot:(0,g.Rx)(),rewards:(0,g.jt)((0,g.IX)(mr)),blockTime:(0,g.AG)((0,g.Rx)()),blockHeight:(0,g.AG)((0,g.Rx)())}))),kr=et((0,g.AG)((0,g.dt)({blockhash:(0,g.Z_)(),previousBlockhash:(0,g.Z_)(),parentSlot:(0,g.Rx)(),transactions:(0,g.IX)((0,g.dt)({transaction:sr,meta:(0,g.AG)(gr),version:(0,g.jt)(yr)})),rewards:(0,g.jt)((0,g.IX)(mr)),blockTime:(0,g.AG)((0,g.Rx)()),blockHeight:(0,g.AG)((0,g.Rx)())}))),wr=et((0,g.AG)((0,g.dt)({blockhash:(0,g.Z_)(),previousBlockhash:(0,g.Z_)(),parentSlot:(0,g.Rx)(),transactions:(0,g.IX)((0,g.dt)({transaction:dr,meta:(0,g.AG)(pr),version:(0,g.jt)(yr)})),rewards:(0,g.jt)((0,g.IX)(mr)),blockTime:(0,g.AG)((0,g.Rx)()),blockHeight:(0,g.AG)((0,g.Rx)())}))),Sr=et((0,g.AG)((0,g.dt)({blockhash:(0,g.Z_)(),previousBlockhash:(0,g.Z_)(),parentSlot:(0,g.Rx)(),transactions:(0,g.IX)((0,g.dt)({transaction:sr,meta:(0,g.AG)(pr),version:(0,g.jt)(yr)})),rewards:(0,g.jt)((0,g.IX)(mr)),blockTime:(0,g.AG)((0,g.Rx)()),blockHeight:(0,g.AG)((0,g.Rx)())}))),Ir=et((0,g.AG)((0,g.dt)({blockhash:(0,g.Z_)(),previousBlockhash:(0,g.Z_)(),parentSlot:(0,g.Rx)(),rewards:(0,g.jt)((0,g.IX)(mr)),blockTime:(0,g.AG)((0,g.Rx)()),blockHeight:(0,g.AG)((0,g.Rx)())}))),_r=et((0,g.AG)((0,g.dt)({blockhash:(0,g.Z_)(),previousBlockhash:(0,g.Z_)(),parentSlot:(0,g.Rx)(),transactions:(0,g.IX)((0,g.dt)({transaction:rr,meta:(0,g.AG)(gr)})),rewards:(0,g.jt)((0,g.IX)(mr)),blockTime:(0,g.AG)((0,g.Rx)())}))),Ar=et((0,g.AG)((0,g.dt)({blockhash:(0,g.Z_)(),previousBlockhash:(0,g.Z_)(),parentSlot:(0,g.Rx)(),signatures:(0,g.IX)((0,g.Z_)()),blockTime:(0,g.AG)((0,g.Rx)())}))),Rr=et((0,g.AG)((0,g.dt)({slot:(0,g.Rx)(),meta:gr,blockTime:(0,g.jt)((0,g.AG)((0,g.Rx)())),transaction:rr,version:(0,g.jt)(yr)}))),xr=et((0,g.AG)((0,g.dt)({slot:(0,g.Rx)(),transaction:dr,meta:(0,g.AG)(pr),blockTime:(0,g.jt)((0,g.AG)((0,g.Rx)())),version:(0,g.jt)(yr)}))),Pr=tt((0,g.dt)({blockhash:(0,g.Z_)(),feeCalculator:(0,g.dt)({lamportsPerSignature:(0,g.Rx)()})})),vr=tt((0,g.dt)({blockhash:(0,g.Z_)(),lastValidBlockHeight:(0,g.Rx)()})),Er=(0,g.dt)({slot:(0,g.Rx)(),numTransactions:(0,g.Rx)(),numSlots:(0,g.Rx)(),samplePeriodSecs:(0,g.Rx)()}),Br=et((0,g.IX)(Er)),Tr=tt((0,g.AG)((0,g.dt)({feeCalculator:(0,g.dt)({lamportsPerSignature:(0,g.Rx)()})}))),Cr=et((0,g.Z_)()),Lr=et((0,g.Z_)()),zr=(0,g.dt)({err:lt,logs:(0,g.IX)((0,g.Z_)()),signature:(0,g.Z_)()}),Kr=(0,g.dt)({result:rt(zr),subscription:(0,g.Rx)()}),Or={"solana-client":"js/0.0.0-development"};class Wr{constructor(e,t){let r,n,s,i,o,a;var c;this._commitment=void 0,this._confirmTransactionInitialTimeout=void 0,this._rpcEndpoint=void 0,this._rpcWsEndpoint=void 0,this._rpcClient=void 0,this._rpcRequest=void 0,this._rpcBatchRequest=void 0,this._rpcWebSocket=void 0,this._rpcWebSocketConnected=!1,this._rpcWebSocketHeartbeat=null,this._rpcWebSocketIdleTimeout=null,this._rpcWebSocketGeneration=0,this._disableBlockhashCaching=!1,this._pollingBlockhash=!1,this._blockhashInfo={latestBlockhash:null,lastFetch:0,transactionSignatures:[],simulatedSignatures:[]},this._nextClientSubscriptionId=0,this._subscriptionDisposeFunctionsByClientSubscriptionId={},this._subscriptionHashByClientSubscriptionId={},this._subscriptionStateChangeCallbacksByHash={},this._subscriptionCallbacksByServerSubscriptionId={},this._subscriptionsByHash={},this._subscriptionsAutoDisposedByRpc=new Set,this.getBlockHeight=(()=>{const e={};return async t=>{const{commitment:r,config:n}=Je(t),s=this._buildArgs([],r,void 0,n),i=Oe(s);return e[i]=e[i]??(async()=>{try{const t=await this._rpcRequest("getBlockHeight",s),r=(0,g.Ue)(t,et((0,g.Rx)()));if("error"in r)throw new Ge(r.error,"failed to get block height information");return r.result}finally{delete e[i]}})(),await e[i]}})(),t&&"string"===typeof t?this._commitment=t:t&&(this._commitment=t.commitment,this._confirmTransactionInitialTimeout=t.confirmTransactionInitialTimeout,r=t.wsEndpoint,n=t.httpHeaders,s=t.fetch,i=t.fetchMiddleware,o=t.disableRetryOnRateLimit,a=t.httpAgent),this._rpcEndpoint=function(e){if(!1===/^https?:/.test(e))throw new TypeError("Endpoint URL must start with `http:` or `https:`.");return e}(e),this._rpcWsEndpoint=r||function(e){const t=e.match(He);if(null==t)throw TypeError(`Failed to validate endpoint URL \`${e}\``);const[r,n,s,i]=t,o=e.startsWith("https:")?"wss:":"ws:",a=null==s?null:parseInt(s.slice(1),10);return`${o}//${n}${null==a?"":`:${a+1}`}${i}`}(e),this._rpcClient=function(e,t,r,n,s,i){const o=r||je;let a;return null!=i&&console.warn("You have supplied an `httpAgent` when creating a `Connection` in a browser environment.It has been ignored; `httpAgent` is only used in Node environments."),n&&(a=async(e,t)=>{const r=await new Promise(((r,s)=>{try{n(e,t,((e,t)=>r([e,t])))}catch(i){s(i)}}));return await o(...r)}),new(y())((async(r,n)=>{const i={method:"POST",body:r,agent:void 0,headers:Object.assign({"Content-Type":"application/json"},t||{},Or)};try{let t,r=5,c=500;for(;t=a?await a(e,i):await o(e,i),429===t.status&&!0!==s&&(r-=1,0!==r);)console.log(`Server responded with ${t.status} ${t.statusText}.  Retrying after ${c}ms delay...`),await be(c),c*=2;const u=await t.text();t.ok?n(null,u):n(new Error(`${t.status} ${t.statusText}: ${u}`))}catch(c){c instanceof Error&&n(c)}}),{})}(e,n,s,i,o,a),this._rpcRequest=(c=this._rpcClient,(e,t)=>new Promise(((r,n)=>{c.request(e,t,((e,t)=>{e?n(e):r(t)}))}))),this._rpcBatchRequest=function(e){return t=>new Promise(((r,n)=>{0===t.length&&r([]);const s=t.map((t=>e.request(t.methodName,t.args)));e.request(s,((e,t)=>{e?n(e):r(t)}))}))}(this._rpcClient),this._rpcWebSocket=new Ve(this._rpcWsEndpoint,{autoconnect:!1,max_reconnects:1/0}),this._rpcWebSocket.on("open",this._wsOnOpen.bind(this)),this._rpcWebSocket.on("error",this._wsOnError.bind(this)),this._rpcWebSocket.on("close",this._wsOnClose.bind(this)),this._rpcWebSocket.on("accountNotification",this._wsOnAccountNotification.bind(this)),this._rpcWebSocket.on("programNotification",this._wsOnProgramAccountNotification.bind(this)),this._rpcWebSocket.on("slotNotification",this._wsOnSlotNotification.bind(this)),this._rpcWebSocket.on("slotsUpdatesNotification",this._wsOnSlotUpdatesNotification.bind(this)),this._rpcWebSocket.on("signatureNotification",this._wsOnSignatureNotification.bind(this)),this._rpcWebSocket.on("rootNotification",this._wsOnRootNotification.bind(this)),this._rpcWebSocket.on("logsNotification",this._wsOnLogsNotification.bind(this))}get commitment(){return this._commitment}get rpcEndpoint(){return this._rpcEndpoint}async getBalanceAndContext(e,t){const{commitment:r,config:n}=Je(t),s=this._buildArgs([e.toBase58()],r,void 0,n),i=await this._rpcRequest("getBalance",s),o=(0,g.Ue)(i,tt((0,g.Rx)()));if("error"in o)throw new Ge(o.error,`failed to get balance for ${e.toBase58()}`);return o.result}async getBalance(e,t){return await this.getBalanceAndContext(e,t).then((e=>e.value)).catch((t=>{throw new Error("failed to get balance of account "+e.toBase58()+": "+t)}))}async getBlockTime(e){const t=await this._rpcRequest("getBlockTime",[e]),r=(0,g.Ue)(t,et((0,g.AG)((0,g.Rx)())));if("error"in r)throw new Ge(r.error,`failed to get block time for slot ${e}`);return r.result}async getMinimumLedgerSlot(){const e=await this._rpcRequest("minimumLedgerSlot",[]),t=(0,g.Ue)(e,et((0,g.Rx)()));if("error"in t)throw new Ge(t.error,"failed to get minimum ledger slot");return t.result}async getFirstAvailableBlock(){const e=await this._rpcRequest("getFirstAvailableBlock",[]),t=(0,g.Ue)(e,_t);if("error"in t)throw new Ge(t.error,"failed to get first available block");return t.result}async getSupply(e){let t={};t="string"===typeof e?{commitment:e}:e?{...e,commitment:e&&e.commitment||this.commitment}:{commitment:this.commitment};const r=await this._rpcRequest("getSupply",[t]),n=(0,g.Ue)(r,At);if("error"in n)throw new Ge(n.error,"failed to get supply");return n.result}async getTokenSupply(e,t){const r=this._buildArgs([e.toBase58()],t),n=await this._rpcRequest("getTokenSupply",r),s=(0,g.Ue)(n,tt(Rt));if("error"in s)throw new Ge(s.error,"failed to get token supply");return s.result}async getTokenAccountBalance(e,t){const r=this._buildArgs([e.toBase58()],t),n=await this._rpcRequest("getTokenAccountBalance",r),s=(0,g.Ue)(n,tt(Rt));if("error"in s)throw new Ge(s.error,"failed to get token account balance");return s.result}async getTokenAccountsByOwner(e,t,r){const{commitment:n,config:s}=Je(r);let i=[e.toBase58()];"mint"in t?i.push({mint:t.mint.toBase58()}):i.push({programId:t.programId.toBase58()});const o=this._buildArgs(i,n,"base64",s),a=await this._rpcRequest("getTokenAccountsByOwner",o),c=(0,g.Ue)(a,Pt);if("error"in c)throw new Ge(c.error,`failed to get token accounts owned by account ${e.toBase58()}`);return c.result}async getParsedTokenAccountsByOwner(e,t,r){let n=[e.toBase58()];"mint"in t?n.push({mint:t.mint.toBase58()}):n.push({programId:t.programId.toBase58()});const s=this._buildArgs(n,r,"jsonParsed"),i=await this._rpcRequest("getTokenAccountsByOwner",s),o=(0,g.Ue)(i,Et);if("error"in o)throw new Ge(o.error,`failed to get token accounts owned by account ${e.toBase58()}`);return o.result}async getLargestAccounts(e){const t={...e,commitment:e&&e.commitment||this.commitment},r=t.filter||t.commitment?[t]:[],n=await this._rpcRequest("getLargestAccounts",r),s=(0,g.Ue)(n,Bt);if("error"in s)throw new Ge(s.error,"failed to get largest accounts");return s.result}async getTokenLargestAccounts(e,t){const r=this._buildArgs([e.toBase58()],t),n=await this._rpcRequest("getTokenLargestAccounts",r),s=(0,g.Ue)(n,xt);if("error"in s)throw new Ge(s.error,"failed to get token largest accounts");return s.result}async getAccountInfoAndContext(e,t){const{commitment:r,config:n}=Je(t),s=this._buildArgs([e.toBase58()],r,"base64",n),i=await this._rpcRequest("getAccountInfo",s),o=(0,g.Ue)(i,tt((0,g.AG)(Tt)));if("error"in o)throw new Ge(o.error,`failed to get info about account ${e.toBase58()}`);return o.result}async getParsedAccountInfo(e,t){const{commitment:r,config:n}=Je(t),s=this._buildArgs([e.toBase58()],r,"jsonParsed",n),i=await this._rpcRequest("getAccountInfo",s),o=(0,g.Ue)(i,tt((0,g.AG)(zt)));if("error"in o)throw new Ge(o.error,`failed to get info about account ${e.toBase58()}`);return o.result}async getAccountInfo(e,t){try{return(await this.getAccountInfoAndContext(e,t)).value}catch(r){throw new Error("failed to get info about account "+e.toBase58()+": "+r)}}async getMultipleParsedAccounts(e,t){const{commitment:r,config:n}=Je(t),s=e.map((e=>e.toBase58())),i=this._buildArgs([s],r,"jsonParsed",n),o=await this._rpcRequest("getMultipleAccounts",i),a=(0,g.Ue)(o,tt((0,g.IX)((0,g.AG)(zt))));if("error"in a)throw new Ge(a.error,`failed to get info for accounts ${s}`);return a.result}async getMultipleAccountsInfoAndContext(e,t){const{commitment:r,config:n}=Je(t),s=e.map((e=>e.toBase58())),i=this._buildArgs([s],r,"base64",n),o=await this._rpcRequest("getMultipleAccounts",i),a=(0,g.Ue)(o,tt((0,g.IX)((0,g.AG)(Tt))));if("error"in a)throw new Ge(a.error,`failed to get info for accounts ${s}`);return a.result}async getMultipleAccountsInfo(e,t){return(await this.getMultipleAccountsInfoAndContext(e,t)).value}async getStakeActivation(e,t,r){const{commitment:n,config:s}=Je(t),i=this._buildArgs([e.toBase58()],n,void 0,{...s,epoch:null!=r?r:s?.epoch}),o=await this._rpcRequest("getStakeActivation",i),a=(0,g.Ue)(o,et(Ot));if("error"in a)throw new Ge(a.error,`failed to get Stake Activation ${e.toBase58()}`);return a.result}async getProgramAccounts(e,t){const{commitment:r,config:n}=Je(t),{encoding:s,...i}=n||{},o=this._buildArgs([e.toBase58()],r,s||"base64",i),a=await this._rpcRequest("getProgramAccounts",o),c=(0,g.Ue)(a,et((0,g.IX)(Ct)));if("error"in c)throw new Ge(c.error,`failed to get accounts owned by program ${e.toBase58()}`);return c.result}async getParsedProgramAccounts(e,t){const{commitment:r,config:n}=Je(t),s=this._buildArgs([e.toBase58()],r,"jsonParsed",n),i=await this._rpcRequest("getProgramAccounts",s),o=(0,g.Ue)(i,et((0,g.IX)(Kt)));if("error"in o)throw new Ge(o.error,`failed to get accounts owned by program ${e.toBase58()}`);return o.result}async confirmTransaction(e,t){let r,n;if("string"==typeof e)r=e;else{const t=e;if(t.abortSignal?.aborted)return Promise.reject(t.abortSignal.reason);r=t.signature}try{n=c().decode(r)}catch(s){throw new Error("signature must be base58 encoded: "+r)}return X(64===n.length,"signature has invalid length"),"string"===typeof e?await this.confirmTransactionUsingLegacyTimeoutStrategy({commitment:t||this.commitment,signature:r}):"lastValidBlockHeight"in e?await this.confirmTransactionUsingBlockHeightExceedanceStrategy({commitment:t||this.commitment,strategy:e}):await this.confirmTransactionUsingDurableNonceStrategy({commitment:t||this.commitment,strategy:e})}getCancellationPromise(e){return new Promise(((t,r)=>{null!=e&&(e.aborted?r(e.reason):e.addEventListener("abort",(()=>{r(e.reason)})))}))}getTransactionConfirmationPromise({commitment:e,signature:t}){let r,n,s=!1;return{abortConfirmation:()=>{n&&(n(),n=void 0),null!=r&&(this.removeSignatureListener(r),r=void 0)},confirmationPromise:new Promise(((i,o)=>{try{r=this.onSignature(t,((e,t)=>{r=void 0;const n={context:t,value:e};i({__type:te.PROCESSED,response:n})}),e);const a=new Promise((e=>{null==r?e():n=this._onSubscriptionStateChange(r,(t=>{"subscribed"===t&&e()}))}));(async()=>{if(await a,s)return;const r=await this.getSignatureStatus(t);if(s)return;if(null==r)return;const{context:n,value:c}=r;if(null!=c)if(c?.err)o(c.err);else{switch(e){case"confirmed":case"single":case"singleGossip":if("processed"===c.confirmationStatus)return;break;case"finalized":case"max":case"root":if("processed"===c.confirmationStatus||"confirmed"===c.confirmationStatus)return}s=!0,i({__type:te.PROCESSED,response:{context:n,value:c}})}})()}catch(a){o(a)}}))}}async confirmTransactionUsingBlockHeightExceedanceStrategy({commitment:e,strategy:{abortSignal:t,lastValidBlockHeight:r,signature:n}}){let s=!1;const i=new Promise((t=>{const n=async()=>{try{return await this.getBlockHeight(e)}catch(t){return-1}};(async()=>{let e=await n();if(!s){for(;e<=r;){if(await be(1e3),s)return;if(e=await n(),s)return}t({__type:te.BLOCKHEIGHT_EXCEEDED})}})()})),{abortConfirmation:o,confirmationPromise:a}=this.getTransactionConfirmationPromise({commitment:e,signature:n}),c=this.getCancellationPromise(t);let u;try{const e=await Promise.race([c,a,i]);if(e.__type!==te.PROCESSED)throw new q(n);u=e.response}finally{s=!0,o()}return u}async confirmTransactionUsingDurableNonceStrategy({commitment:e,strategy:{abortSignal:t,minContextSlot:r,nonceAccountPubkey:n,nonceValue:s,signature:i}}){let o=!1;const a=new Promise((t=>{let i=s,a=null;const c=async()=>{try{const{context:t,value:s}=await this.getNonceAndContext(n,{commitment:e,minContextSlot:r});return a=t.slot,s?.nonce}catch(t){return i}};(async()=>{if(i=await c(),!o)for(;;){if(s!==i)return void t({__type:te.NONCE_INVALID,slotInWhichNonceDidAdvance:a});if(await be(2e3),o)return;if(i=await c(),o)return}})()})),{abortConfirmation:c,confirmationPromise:u}=this.getTransactionConfirmationPromise({commitment:e,signature:i}),d=this.getCancellationPromise(t);let l;try{const t=await Promise.race([d,u,a]);if(t.__type===te.PROCESSED)l=t.response;else{let n;for(;;){const e=await this.getSignatureStatus(i);if(null==e)break;if(!(e.context.slot<(t.slotInWhichNonceDidAdvance??r))){n=e;break}await be(400)}if(!n?.value)throw new j(i);{const t=e||"finalized",{confirmationStatus:r}=n.value;switch(t){case"processed":case"recent":if("processed"!==r&&"confirmed"!==r&&"finalized"!==r)throw new j(i);break;case"confirmed":case"single":case"singleGossip":if("confirmed"!==r&&"finalized"!==r)throw new j(i);break;case"finalized":case"max":case"root":if("finalized"!==r)throw new j(i)}l={context:n.context,value:{err:n.value.err}}}}}finally{o=!0,c()}return l}async confirmTransactionUsingLegacyTimeoutStrategy({commitment:e,signature:t}){let r;const n=new Promise((t=>{let n=this._confirmTransactionInitialTimeout||6e4;switch(e){case"processed":case"recent":case"single":case"confirmed":case"singleGossip":n=this._confirmTransactionInitialTimeout||3e4}r=setTimeout((()=>t({__type:te.TIMED_OUT,timeoutMs:n})),n)})),{abortConfirmation:s,confirmationPromise:i}=this.getTransactionConfirmationPromise({commitment:e,signature:t});let o;try{const e=await Promise.race([i,n]);if(e.__type!==te.PROCESSED)throw new G(t,e.timeoutMs/1e3);o=e.response}finally{clearTimeout(r),s()}return o}async getClusterNodes(){const e=await this._rpcRequest("getClusterNodes",[]),t=(0,g.Ue)(e,et((0,g.IX)(Zt)));if("error"in t)throw new Ge(t.error,"failed to get cluster nodes");return t.result}async getVoteAccounts(e){const t=this._buildArgs([],e),r=await this._rpcRequest("getVoteAccounts",t),n=(0,g.Ue)(r,Xt);if("error"in n)throw new Ge(n.error,"failed to get vote accounts");return n.result}async getSlot(e){const{commitment:t,config:r}=Je(e),n=this._buildArgs([],t,void 0,r),s=await this._rpcRequest("getSlot",n),i=(0,g.Ue)(s,et((0,g.Rx)()));if("error"in i)throw new Ge(i.error,"failed to get slot");return i.result}async getSlotLeader(e){const{commitment:t,config:r}=Je(e),n=this._buildArgs([],t,void 0,r),s=await this._rpcRequest("getSlotLeader",n),i=(0,g.Ue)(s,et((0,g.Z_)()));if("error"in i)throw new Ge(i.error,"failed to get slot leader");return i.result}async getSlotLeaders(e,t){const r=[e,t],n=await this._rpcRequest("getSlotLeaders",r),s=(0,g.Ue)(n,et((0,g.IX)(Fe)));if("error"in s)throw new Ge(s.error,"failed to get slot leaders");return s.result}async getSignatureStatus(e,t){const{context:r,value:n}=await this.getSignatureStatuses([e],t);X(1===n.length);return{context:r,value:n[0]}}async getSignatureStatuses(e,t){const r=[e];t&&r.push(t);const n=await this._rpcRequest("getSignatureStatuses",r),s=(0,g.Ue)(n,Qt);if("error"in s)throw new Ge(s.error,"failed to get signature status");return s.result}async getTransactionCount(e){const{commitment:t,config:r}=Je(e),n=this._buildArgs([],t,void 0,r),s=await this._rpcRequest("getTransactionCount",n),i=(0,g.Ue)(s,et((0,g.Rx)()));if("error"in i)throw new Ge(i.error,"failed to get transaction count");return i.result}async getTotalSupply(e){return(await this.getSupply({commitment:e,excludeNonCirculatingAccountsList:!0})).value.total}async getInflationGovernor(e){const t=this._buildArgs([],e),r=await this._rpcRequest("getInflationGovernor",t),n=(0,g.Ue)(r,bt);if("error"in n)throw new Ge(n.error,"failed to get inflation");return n.result}async getInflationReward(e,t,r){const{commitment:n,config:s}=Je(r),i=this._buildArgs([e.map((e=>e.toBase58()))],n,void 0,{...s,epoch:null!=t?t:s?.epoch}),o=await this._rpcRequest("getInflationReward",i),a=(0,g.Ue)(o,it);if("error"in a)throw new Ge(a.error,"failed to get inflation reward");return a.result}async getInflationRate(){const e=await this._rpcRequest("getInflationRate",[]),t=(0,g.Ue)(e,ft);if("error"in t)throw new Ge(t.error,"failed to get inflation rate");return t.result}async getEpochInfo(e){const{commitment:t,config:r}=Je(e),n=this._buildArgs([],t,void 0,r),s=await this._rpcRequest("getEpochInfo",n),i=(0,g.Ue)(s,wt);if("error"in i)throw new Ge(i.error,"failed to get epoch info");return i.result}async getEpochSchedule(){const e=await this._rpcRequest("getEpochSchedule",[]),t=(0,g.Ue)(e,St);if("error"in t)throw new Ge(t.error,"failed to get epoch schedule");const r=t.result;return new Ne(r.slotsPerEpoch,r.leaderScheduleSlotOffset,r.warmup,r.firstNormalEpoch,r.firstNormalSlot)}async getLeaderSchedule(){const e=await this._rpcRequest("getLeaderSchedule",[]),t=(0,g.Ue)(e,It);if("error"in t)throw new Ge(t.error,"failed to get leader schedule");return t.result}async getMinimumBalanceForRentExemption(e,t){const r=this._buildArgs([e],t),n=await this._rpcRequest("getMinimumBalanceForRentExemption",r),s=(0,g.Ue)(n,er);return"error"in s?(console.warn("Unable to fetch minimum balance for rent exemption"),0):s.result}async getRecentBlockhashAndContext(e){const t=this._buildArgs([],e),r=await this._rpcRequest("getRecentBlockhash",t),n=(0,g.Ue)(r,Pr);if("error"in n)throw new Ge(n.error,"failed to get recent blockhash");return n.result}async getRecentPerformanceSamples(e){const t=await this._rpcRequest("getRecentPerformanceSamples",e?[e]:[]),r=(0,g.Ue)(t,Br);if("error"in r)throw new Ge(r.error,"failed to get recent performance samples");return r.result}async getFeeCalculatorForBlockhash(e,t){const r=this._buildArgs([e],t),n=await this._rpcRequest("getFeeCalculatorForBlockhash",r),s=(0,g.Ue)(n,Tr);if("error"in s)throw new Ge(s.error,"failed to get fee calculator");const{context:i,value:o}=s.result;return{context:i,value:null!==o?o.feeCalculator:null}}async getFeeForMessage(e,t){const r=x(e.serialize()).toString("base64"),n=this._buildArgs([r],t),s=await this._rpcRequest("getFeeForMessage",n),i=(0,g.Ue)(s,tt((0,g.AG)((0,g.Rx)())));if("error"in i)throw new Ge(i.error,"failed to get fee for message");if(null===i.result)throw new Error("invalid blockhash");return i.result}async getRecentPrioritizationFees(e){const t=e?.lockedWritableAccounts?.map((e=>e.toBase58())),r=this._buildArgs(t?.length?[t]:[]),n=await this._rpcRequest("getRecentPrioritizationFees",r),s=(0,g.Ue)(n,kt);if("error"in s)throw new Ge(s.error,"failed to get recent prioritization fees");return s.result}async getRecentBlockhash(e){try{return(await this.getRecentBlockhashAndContext(e)).value}catch(t){throw new Error("failed to get recent blockhash: "+t)}}async getLatestBlockhash(e){try{return(await this.getLatestBlockhashAndContext(e)).value}catch(t){throw new Error("failed to get recent blockhash: "+t)}}async getLatestBlockhashAndContext(e){const{commitment:t,config:r}=Je(e),n=this._buildArgs([],t,void 0,r),s=await this._rpcRequest("getLatestBlockhash",n),i=(0,g.Ue)(s,vr);if("error"in i)throw new Ge(i.error,"failed to get latest blockhash");return i.result}async getVersion(){const e=await this._rpcRequest("getVersion",[]),t=(0,g.Ue)(e,et(pt));if("error"in t)throw new Ge(t.error,"failed to get version");return t.result}async getGenesisHash(){const e=await this._rpcRequest("getGenesisHash",[]),t=(0,g.Ue)(e,et((0,g.Z_)()));if("error"in t)throw new Ge(t.error,"failed to get genesis hash");return t.result}async getBlock(e,t){const{commitment:r,config:n}=Je(t),s=this._buildArgsAtLeastConfirmed([e],r,void 0,n),i=await this._rpcRequest("getBlock",s);try{switch(n?.transactionDetails){case"accounts":{const e=(0,g.Ue)(i,kr);if("error"in e)throw e.error;return e.result}case"none":{const e=(0,g.Ue)(i,fr);if("error"in e)throw e.error;return e.result}default:{const e=(0,g.Ue)(i,br);if("error"in e)throw e.error;const{result:t}=e;return t?{...t,transactions:t.transactions.map((({transaction:e,meta:t,version:r})=>({meta:t,transaction:{...e,message:nt(r,e.message)},version:r})))}:null}}}catch(o){throw new Ge(o,"failed to get confirmed block")}}async getParsedBlock(e,t){const{commitment:r,config:n}=Je(t),s=this._buildArgsAtLeastConfirmed([e],r,"jsonParsed",n),i=await this._rpcRequest("getBlock",s);try{switch(n?.transactionDetails){case"accounts":{const e=(0,g.Ue)(i,Sr);if("error"in e)throw e.error;return e.result}case"none":{const e=(0,g.Ue)(i,Ir);if("error"in e)throw e.error;return e.result}default:{const e=(0,g.Ue)(i,wr);if("error"in e)throw e.error;return e.result}}}catch(o){throw new Ge(o,"failed to get block")}}async getBlockProduction(e){let t,r;if("string"===typeof e)r=e;else if(e){const{commitment:n,...s}=e;r=n,t=s}const n=this._buildArgs([],r,"base64",t),s=await this._rpcRequest("getBlockProduction",n),i=(0,g.Ue)(s,mt);if("error"in i)throw new Ge(i.error,"failed to get block production information");return i.result}async getTransaction(e,t){const{commitment:r,config:n}=Je(t),s=this._buildArgsAtLeastConfirmed([e],r,void 0,n),i=await this._rpcRequest("getTransaction",s),o=(0,g.Ue)(i,Rr);if("error"in o)throw new Ge(o.error,"failed to get transaction");const a=o.result;return a?{...a,transaction:{...a.transaction,message:nt(a.version,a.transaction.message)}}:a}async getParsedTransaction(e,t){const{commitment:r,config:n}=Je(t),s=this._buildArgsAtLeastConfirmed([e],r,"jsonParsed",n),i=await this._rpcRequest("getTransaction",s),o=(0,g.Ue)(i,xr);if("error"in o)throw new Ge(o.error,"failed to get transaction");return o.result}async getParsedTransactions(e,t){const{commitment:r,config:n}=Je(t),s=e.map((e=>({methodName:"getTransaction",args:this._buildArgsAtLeastConfirmed([e],r,"jsonParsed",n)})));return(await this._rpcBatchRequest(s)).map((e=>{const t=(0,g.Ue)(e,xr);if("error"in t)throw new Ge(t.error,"failed to get transactions");return t.result}))}async getTransactions(e,t){const{commitment:r,config:n}=Je(t),s=e.map((e=>({methodName:"getTransaction",args:this._buildArgsAtLeastConfirmed([e],r,void 0,n)})));return(await this._rpcBatchRequest(s)).map((e=>{const t=(0,g.Ue)(e,Rr);if("error"in t)throw new Ge(t.error,"failed to get transactions");const r=t.result;return r?{...r,transaction:{...r.transaction,message:nt(r.version,r.transaction.message)}}:r}))}async getConfirmedBlock(e,t){const r=this._buildArgsAtLeastConfirmed([e],t),n=await this._rpcRequest("getConfirmedBlock",r),s=(0,g.Ue)(n,_r);if("error"in s)throw new Ge(s.error,"failed to get confirmed block");const i=s.result;if(!i)throw new Error("Confirmed block "+e+" not found");const o={...i,transactions:i.transactions.map((({transaction:e,meta:t})=>{const r=new Y(e.message);return{meta:t,transaction:{...e,message:r}}}))};return{...o,transactions:o.transactions.map((({transaction:e,meta:t})=>({meta:t,transaction:se.populate(e.message,e.signatures)})))}}async getBlocks(e,t,r){const n=this._buildArgsAtLeastConfirmed(void 0!==t?[e,t]:[e],r),s=await this._rpcRequest("getBlocks",n),i=(0,g.Ue)(s,et((0,g.IX)((0,g.Rx)())));if("error"in i)throw new Ge(i.error,"failed to get blocks");return i.result}async getBlockSignatures(e,t){const r=this._buildArgsAtLeastConfirmed([e],t,void 0,{transactionDetails:"signatures",rewards:!1}),n=await this._rpcRequest("getBlock",r),s=(0,g.Ue)(n,Ar);if("error"in s)throw new Ge(s.error,"failed to get block");const i=s.result;if(!i)throw new Error("Block "+e+" not found");return i}async getConfirmedBlockSignatures(e,t){const r=this._buildArgsAtLeastConfirmed([e],t,void 0,{transactionDetails:"signatures",rewards:!1}),n=await this._rpcRequest("getConfirmedBlock",r),s=(0,g.Ue)(n,Ar);if("error"in s)throw new Ge(s.error,"failed to get confirmed block");const i=s.result;if(!i)throw new Error("Confirmed block "+e+" not found");return i}async getConfirmedTransaction(e,t){const r=this._buildArgsAtLeastConfirmed([e],t),n=await this._rpcRequest("getConfirmedTransaction",r),s=(0,g.Ue)(n,Rr);if("error"in s)throw new Ge(s.error,"failed to get transaction");const i=s.result;if(!i)return i;const o=new Y(i.transaction.message),a=i.transaction.signatures;return{...i,transaction:se.populate(o,a)}}async getParsedConfirmedTransaction(e,t){const r=this._buildArgsAtLeastConfirmed([e],t,"jsonParsed"),n=await this._rpcRequest("getConfirmedTransaction",r),s=(0,g.Ue)(n,xr);if("error"in s)throw new Ge(s.error,"failed to get confirmed transaction");return s.result}async getParsedConfirmedTransactions(e,t){const r=e.map((e=>({methodName:"getConfirmedTransaction",args:this._buildArgsAtLeastConfirmed([e],t,"jsonParsed")})));return(await this._rpcBatchRequest(r)).map((e=>{const t=(0,g.Ue)(e,xr);if("error"in t)throw new Ge(t.error,"failed to get confirmed transactions");return t.result}))}async getConfirmedSignaturesForAddress(e,t,r){let n={},s=await this.getFirstAvailableBlock();for(;!("until"in n)&&!(--t<=0||t<s);)try{const e=await this.getConfirmedBlockSignatures(t,"finalized");e.signatures.length>0&&(n.until=e.signatures[e.signatures.length-1].toString())}catch(o){if(o instanceof Error&&o.message.includes("skipped"))continue;throw o}let i=await this.getSlot("finalized");for(;!("before"in n)&&!(++r>i);)try{const e=await this.getConfirmedBlockSignatures(r);e.signatures.length>0&&(n.before=e.signatures[e.signatures.length-1].toString())}catch(o){if(o instanceof Error&&o.message.includes("skipped"))continue;throw o}return(await this.getConfirmedSignaturesForAddress2(e,n)).map((e=>e.signature))}async getConfirmedSignaturesForAddress2(e,t,r){const n=this._buildArgsAtLeastConfirmed([e.toBase58()],r,void 0,t),s=await this._rpcRequest("getConfirmedSignaturesForAddress2",n),i=(0,g.Ue)(s,Wt);if("error"in i)throw new Ge(i.error,"failed to get confirmed signatures for address");return i.result}async getSignaturesForAddress(e,t,r){const n=this._buildArgsAtLeastConfirmed([e.toBase58()],r,void 0,t),s=await this._rpcRequest("getSignaturesForAddress",n),i=(0,g.Ue)(s,Nt);if("error"in i)throw new Ge(i.error,"failed to get signatures for address");return i.result}async getAddressLookupTable(e,t){const{context:r,value:n}=await this.getAccountInfoAndContext(e,t);let s=null;return null!==n&&(s=new De({key:e,state:De.deserialize(n.data)})),{context:r,value:s}}async getNonceAndContext(e,t){const{context:r,value:n}=await this.getAccountInfoAndContext(e,t);let s=null;return null!==n&&(s=_e.fromAccountData(n.data)),{context:r,value:s}}async getNonce(e,t){return await this.getNonceAndContext(e,t).then((e=>e.value)).catch((t=>{throw new Error("failed to get nonce for account "+e.toBase58()+": "+t)}))}async requestAirdrop(e,t){const r=await this._rpcRequest("requestAirdrop",[e.toBase58(),t]),n=(0,g.Ue)(r,Cr);if("error"in n)throw new Ge(n.error,`airdrop to ${e.toBase58()} failed`);return n.result}async _blockhashWithExpiryBlockHeight(e){if(!e){for(;this._pollingBlockhash;)await be(100);const e=Date.now()-this._blockhashInfo.lastFetch>=Xe;if(null!==this._blockhashInfo.latestBlockhash&&!e)return this._blockhashInfo.latestBlockhash}return await this._pollNewBlockhash()}async _pollNewBlockhash(){this._pollingBlockhash=!0;try{const e=Date.now(),t=this._blockhashInfo.latestBlockhash,r=t?t.blockhash:null;for(let n=0;n<50;n++){const e=await this.getLatestBlockhash("finalized");if(r!==e.blockhash)return this._blockhashInfo={latestBlockhash:e,lastFetch:Date.now(),transactionSignatures:[],simulatedSignatures:[]},e;await be(200)}throw new Error(`Unable to obtain a new blockhash after ${Date.now()-e}ms`)}finally{this._pollingBlockhash=!1}}async getStakeMinimumDelegation(e){const{commitment:t,config:r}=Je(e),n=this._buildArgs([],t,"base64",r),s=await this._rpcRequest("getStakeMinimumDelegation",n),i=(0,g.Ue)(s,tt((0,g.Rx)()));if("error"in i)throw new Ge(i.error,"failed to get stake minimum delegation");return i.result}async simulateTransaction(e,t,r){if("message"in e){const s=e.serialize(),i=n.Buffer.from(s).toString("base64");if(Array.isArray(t)||void 0!==r)throw new Error("Invalid arguments");const o=t||{};o.encoding="base64","commitment"in o||(o.commitment=this.commitment);const a=[i,o],c=await this._rpcRequest("simulateTransaction",a),u=(0,g.Ue)(c,yt);if("error"in u)throw new Error("failed to simulate transaction: "+u.error.message);return u.result}let s;if(e instanceof se){let t=e;s=new se,s.feePayer=t.feePayer,s.instructions=e.instructions,s.nonceInfo=t.nonceInfo,s.signatures=t.signatures}else s=se.populate(e),s._message=s._json=void 0;if(void 0!==t&&!Array.isArray(t))throw new Error("Invalid arguments");const i=t;if(s.nonceInfo&&i)s.sign(...i);else{let e=this._disableBlockhashCaching;for(;;){const t=await this._blockhashWithExpiryBlockHeight(e);if(s.lastValidBlockHeight=t.lastValidBlockHeight,s.recentBlockhash=t.blockhash,!i)break;if(s.sign(...i),!s.signature)throw new Error("!signature");const r=s.signature.toString("base64");if(!this._blockhashInfo.simulatedSignatures.includes(r)&&!this._blockhashInfo.transactionSignatures.includes(r)){this._blockhashInfo.simulatedSignatures.push(r);break}e=!0}}const o=s._compile(),a=o.serialize(),c=s._serialize(a).toString("base64"),u={encoding:"base64",commitment:this.commitment};if(r){const e=(Array.isArray(r)?r:o.nonProgramIds()).map((e=>e.toBase58()));u.accounts={encoding:"base64",addresses:e}}i&&(u.sigVerify=!0);const d=[c,u],l=await this._rpcRequest("simulateTransaction",d),h=(0,g.Ue)(l,yt);if("error"in h){let e;if("data"in h.error&&(e=h.error.data.logs,e&&Array.isArray(e))){const t="\n    ",r=t+e.join(t);console.error(h.error.message,r)}throw new Ue("failed to simulate transaction: "+h.error.message,e)}return h.result}async sendTransaction(e,t,r){if("version"in e){if(t&&Array.isArray(t))throw new Error("Invalid arguments");const r=e.serialize();return await this.sendRawTransaction(r,t)}if(void 0===t||!Array.isArray(t))throw new Error("Invalid arguments");const n=t;if(e.nonceInfo)e.sign(...n);else{let t=this._disableBlockhashCaching;for(;;){const r=await this._blockhashWithExpiryBlockHeight(t);if(e.lastValidBlockHeight=r.lastValidBlockHeight,e.recentBlockhash=r.blockhash,e.sign(...n),!e.signature)throw new Error("!signature");const s=e.signature.toString("base64");if(!this._blockhashInfo.transactionSignatures.includes(s)){this._blockhashInfo.transactionSignatures.push(s);break}t=!0}}const s=e.serialize();return await this.sendRawTransaction(s,r)}async sendRawTransaction(e,t){const r=x(e).toString("base64");return await this.sendEncodedTransaction(r,t)}async sendEncodedTransaction(e,t){const r={encoding:"base64"},n=t&&t.skipPreflight,s=t&&t.preflightCommitment||this.commitment;t&&null!=t.maxRetries&&(r.maxRetries=t.maxRetries),t&&null!=t.minContextSlot&&(r.minContextSlot=t.minContextSlot),n&&(r.skipPreflight=n),s&&(r.preflightCommitment=s);const i=[e,r],o=await this._rpcRequest("sendTransaction",i),a=(0,g.Ue)(o,Lr);if("error"in a){let e;throw"data"in a.error&&(e=a.error.data.logs),new Ue("failed to send transaction: "+a.error.message,e)}return a.result}_wsOnOpen(){this._rpcWebSocketConnected=!0,this._rpcWebSocketHeartbeat=setInterval((()=>{(async()=>{try{await this._rpcWebSocket.notify("ping")}catch{}})()}),5e3),this._updateSubscriptions()}_wsOnError(e){this._rpcWebSocketConnected=!1,console.error("ws error:",e.message)}_wsOnClose(e){this._rpcWebSocketConnected=!1,this._rpcWebSocketGeneration=(this._rpcWebSocketGeneration+1)%Number.MAX_SAFE_INTEGER,this._rpcWebSocketIdleTimeout&&(clearTimeout(this._rpcWebSocketIdleTimeout),this._rpcWebSocketIdleTimeout=null),this._rpcWebSocketHeartbeat&&(clearInterval(this._rpcWebSocketHeartbeat),this._rpcWebSocketHeartbeat=null),1e3!==e?(this._subscriptionCallbacksByServerSubscriptionId={},Object.entries(this._subscriptionsByHash).forEach((([e,t])=>{this._setSubscription(e,{...t,state:"pending"})}))):this._updateSubscriptions()}_setSubscription(e,t){const r=this._subscriptionsByHash[e]?.state;if(this._subscriptionsByHash[e]=t,r!==t.state){const r=this._subscriptionStateChangeCallbacksByHash[e];r&&r.forEach((e=>{try{e(t.state)}catch{}}))}}_onSubscriptionStateChange(e,t){const r=this._subscriptionHashByClientSubscriptionId[e];if(null==r)return()=>{};const n=this._subscriptionStateChangeCallbacksByHash[r]||=new Set;return n.add(t),()=>{n.delete(t),0===n.size&&delete this._subscriptionStateChangeCallbacksByHash[r]}}async _updateSubscriptions(){if(0===Object.keys(this._subscriptionsByHash).length)return void(this._rpcWebSocketConnected&&(this._rpcWebSocketConnected=!1,this._rpcWebSocketIdleTimeout=setTimeout((()=>{this._rpcWebSocketIdleTimeout=null;try{this._rpcWebSocket.close()}catch(e){e instanceof Error&&console.log(`Error when closing socket connection: ${e.message}`)}}),500)));if(null!==this._rpcWebSocketIdleTimeout&&(clearTimeout(this._rpcWebSocketIdleTimeout),this._rpcWebSocketIdleTimeout=null,this._rpcWebSocketConnected=!0),!this._rpcWebSocketConnected)return void this._rpcWebSocket.connect();const e=this._rpcWebSocketGeneration,t=()=>e===this._rpcWebSocketGeneration;await Promise.all(Object.keys(this._subscriptionsByHash).map((async e=>{const r=this._subscriptionsByHash[e];if(void 0!==r)switch(r.state){case"pending":case"unsubscribed":if(0===r.callbacks.size)return delete this._subscriptionsByHash[e],"unsubscribed"===r.state&&delete this._subscriptionCallbacksByServerSubscriptionId[r.serverSubscriptionId],void(await this._updateSubscriptions());await(async()=>{const{args:n,method:s}=r;try{this._setSubscription(e,{...r,state:"subscribing"});const t=await this._rpcWebSocket.call(s,n);this._setSubscription(e,{...r,serverSubscriptionId:t,state:"subscribed"}),this._subscriptionCallbacksByServerSubscriptionId[t]=r.callbacks,await this._updateSubscriptions()}catch(i){if(i instanceof Error&&console.error(`${s} error for argument`,n,i.message),!t())return;this._setSubscription(e,{...r,state:"pending"}),await this._updateSubscriptions()}})();break;case"subscribed":0===r.callbacks.size&&await(async()=>{const{serverSubscriptionId:n,unsubscribeMethod:s}=r;if(this._subscriptionsAutoDisposedByRpc.has(n))this._subscriptionsAutoDisposedByRpc.delete(n);else{this._setSubscription(e,{...r,state:"unsubscribing"}),this._setSubscription(e,{...r,state:"unsubscribing"});try{await this._rpcWebSocket.call(s,[n])}catch(i){if(i instanceof Error&&console.error(`${s} error:`,i.message),!t())return;return this._setSubscription(e,{...r,state:"subscribed"}),void(await this._updateSubscriptions())}}this._setSubscription(e,{...r,state:"unsubscribed"}),await this._updateSubscriptions()})()}})))}_handleServerNotification(e,t){const r=this._subscriptionCallbacksByServerSubscriptionId[e];void 0!==r&&r.forEach((e=>{try{e(...t)}catch(r){console.error(r)}}))}_wsOnAccountNotification(e){const{result:t,subscription:r}=(0,g.Ue)(e,Ut);this._handleServerNotification(r,[t.value,t.context])}_makeSubscription(e,t){const r=this._nextClientSubscriptionId++,n=Oe([e.method,t]),s=this._subscriptionsByHash[n];return void 0===s?this._subscriptionsByHash[n]={...e,args:t,callbacks:new Set([e.callback]),state:"pending"}:s.callbacks.add(e.callback),this._subscriptionHashByClientSubscriptionId[r]=n,this._subscriptionDisposeFunctionsByClientSubscriptionId[r]=async()=>{delete this._subscriptionDisposeFunctionsByClientSubscriptionId[r],delete this._subscriptionHashByClientSubscriptionId[r];const t=this._subscriptionsByHash[n];X(void 0!==t,`Could not find a \`Subscription\` when tearing down client subscription #${r}`),t.callbacks.delete(e.callback),await this._updateSubscriptions()},this._updateSubscriptions(),r}onAccountChange(e,t,r){const n=this._buildArgs([e.toBase58()],r||this._commitment||"finalized","base64");return this._makeSubscription({callback:t,method:"accountSubscribe",unsubscribeMethod:"accountUnsubscribe"},n)}async removeAccountChangeListener(e){await this._unsubscribeClientSubscription(e,"account change")}_wsOnProgramAccountNotification(e){const{result:t,subscription:r}=(0,g.Ue)(e,Gt);this._handleServerNotification(r,[{accountId:t.value.pubkey,accountInfo:t.value.account},t.context])}onProgramAccountChange(e,t,r,n){const s=this._buildArgs([e.toBase58()],r||this._commitment||"finalized","base64",n?{filters:n}:void 0);return this._makeSubscription({callback:t,method:"programSubscribe",unsubscribeMethod:"programUnsubscribe"},s)}async removeProgramAccountChangeListener(e){await this._unsubscribeClientSubscription(e,"program account change")}onLogs(e,t,r){const n=this._buildArgs(["object"===typeof e?{mentions:[e.toString()]}:e],r||this._commitment||"finalized");return this._makeSubscription({callback:t,method:"logsSubscribe",unsubscribeMethod:"logsUnsubscribe"},n)}async removeOnLogsListener(e){await this._unsubscribeClientSubscription(e,"logs")}_wsOnLogsNotification(e){const{result:t,subscription:r}=(0,g.Ue)(e,Kr);this._handleServerNotification(r,[t.value,t.context])}_wsOnSlotNotification(e){const{result:t,subscription:r}=(0,g.Ue)(e,Vt);this._handleServerNotification(r,[t])}onSlotChange(e){return this._makeSubscription({callback:e,method:"slotSubscribe",unsubscribeMethod:"slotUnsubscribe"},[])}async removeSlotChangeListener(e){await this._unsubscribeClientSubscription(e,"slot change")}_wsOnSlotUpdatesNotification(e){const{result:t,subscription:r}=(0,g.Ue)(e,Mt);this._handleServerNotification(r,[t])}onSlotUpdate(e){return this._makeSubscription({callback:e,method:"slotsUpdatesSubscribe",unsubscribeMethod:"slotsUpdatesUnsubscribe"},[])}async removeSlotUpdateListener(e){await this._unsubscribeClientSubscription(e,"slot update")}async _unsubscribeClientSubscription(e,t){const r=this._subscriptionDisposeFunctionsByClientSubscriptionId[e];r?await r():console.warn(`Ignored unsubscribe request because an active subscription with id \`${e}\` for '${t}' events could not be found.`)}_buildArgs(e,t,r,n){const s=t||this._commitment;if(s||r||n){let t={};r&&(t.encoding=r),s&&(t.commitment=s),n&&(t=Object.assign(t,n)),e.push(t)}return e}_buildArgsAtLeastConfirmed(e,t,r,n){const s=t||this._commitment;if(s&&!["confirmed","finalized"].includes(s))throw new Error("Using Connection with default commitment: `"+this._commitment+"`, but method requires at least `confirmed`");return this._buildArgs(e,t,r,n)}_wsOnSignatureNotification(e){const{result:t,subscription:r}=(0,g.Ue)(e,Ht);"receivedSignature"!==t.value&&this._subscriptionsAutoDisposedByRpc.add(r),this._handleServerNotification(r,"receivedSignature"===t.value?[{type:"received"},t.context]:[{type:"status",result:t.value},t.context])}onSignature(e,t,r){const n=this._buildArgs([e],r||this._commitment||"finalized"),s=this._makeSubscription({callback:(e,r)=>{if("status"===e.type){t(e.result,r);try{this.removeSignatureListener(s)}catch(n){}}},method:"signatureSubscribe",unsubscribeMethod:"signatureUnsubscribe"},n);return s}onSignatureWithOptions(e,t,r){const{commitment:n,...s}={...r,commitment:r&&r.commitment||this._commitment||"finalized"},i=this._buildArgs([e],n,void 0,s),o=this._makeSubscription({callback:(e,r)=>{t(e,r);try{this.removeSignatureListener(o)}catch(n){}},method:"signatureSubscribe",unsubscribeMethod:"signatureUnsubscribe"},i);return o}async removeSignatureListener(e){await this._unsubscribeClientSubscription(e,"signature result")}_wsOnRootNotification(e){const{result:t,subscription:r}=(0,g.Ue)(e,Ft);this._handleServerNotification(r,[t])}onRootChange(e){return this._makeSubscription({callback:e,method:"rootSubscribe",unsubscribeMethod:"rootUnsubscribe"},[])}async removeRootChangeListener(e){await this._unsubscribeClientSubscription(e,"root change")}}class Nr{constructor(e){this._keypair=void 0,this._keypair=e??S()}static generate(){return new Nr(S())}static fromSecretKey(e,t){if(64!==e.byteLength)throw new Error("bad secret key size");const r=e.slice(32,64);if(!t||!t.skipValidation){const t=e.slice(0,32),n=I(t);for(let e=0;e<32;e++)if(r[e]!==n[e])throw new Error("provided secretKey is invalid")}return new Nr({publicKey:r,secretKey:e})}static fromSeed(e){const t=I(e),r=new Uint8Array(64);return r.set(e),r.set(t,32),new Nr({publicKey:t,secretKey:r})}get publicKey(){return new z(this._keypair.publicKey)}get secretKey(){return new Uint8Array(this._keypair.secretKey)}}const Ur=Object.freeze({CreateLookupTable:{index:0,layout:l.struct([l.u32("instruction"),Ae("recentSlot"),l.u8("bumpSeed")])},FreezeLookupTable:{index:1,layout:l.struct([l.u32("instruction")])},ExtendLookupTable:{index:2,layout:l.struct([l.u32("instruction"),Ae(),l.seq(D(),l.offset(l.u32(),-8),"addresses")])},DeactivateLookupTable:{index:3,layout:l.struct([l.u32("instruction")])},CloseLookupTable:{index:4,layout:l.struct([l.u32("instruction")])}});class qr{constructor(){}static decodeInstructionType(e){this.checkProgramId(e.programId);const t=l.u32("instruction").decode(e.data);let r;for(const[n,s]of Object.entries(Ur))if(s.index==t){r=n;break}if(!r)throw new Error("Invalid Instruction. Should be a LookupTable Instruction");return r}static decodeCreateLookupTable(e){this.checkProgramId(e.programId),this.checkKeysLength(e.keys,4);const{recentSlot:t}=ke(Ur.CreateLookupTable,e.data);return{authority:e.keys[1].pubkey,payer:e.keys[2].pubkey,recentSlot:Number(t)}}static decodeExtendLookupTable(e){if(this.checkProgramId(e.programId),e.keys.length<2)throw new Error(`invalid instruction; found ${e.keys.length} keys, expected at least 2`);const{addresses:t}=ke(Ur.ExtendLookupTable,e.data);return{lookupTable:e.keys[0].pubkey,authority:e.keys[1].pubkey,payer:e.keys.length>2?e.keys[2].pubkey:void 0,addresses:t.map((e=>new z(e)))}}static decodeCloseLookupTable(e){return this.checkProgramId(e.programId),this.checkKeysLength(e.keys,3),{lookupTable:e.keys[0].pubkey,authority:e.keys[1].pubkey,recipient:e.keys[2].pubkey}}static decodeFreezeLookupTable(e){return this.checkProgramId(e.programId),this.checkKeysLength(e.keys,2),{lookupTable:e.keys[0].pubkey,authority:e.keys[1].pubkey}}static decodeDeactivateLookupTable(e){return this.checkProgramId(e.programId),this.checkKeysLength(e.keys,2),{lookupTable:e.keys[0].pubkey,authority:e.keys[1].pubkey}}static checkProgramId(e){if(!e.equals(Gr.programId))throw new Error("invalid instruction; programId is not AddressLookupTable Program")}static checkKeysLength(e,t){if(e.length<t)throw new Error(`invalid instruction; found ${e.length} keys, expected at least ${t}`)}}class Gr{constructor(){}static createLookupTable(e){const[t,r]=z.findProgramAddressSync([e.authority.toBuffer(),(0,h.toBufferLE)(BigInt(e.recentSlot),8)],this.programId),n=fe(Ur.CreateLookupTable,{recentSlot:BigInt(e.recentSlot),bumpSeed:r}),s=[{pubkey:t,isSigner:!1,isWritable:!0},{pubkey:e.authority,isSigner:!0,isWritable:!1},{pubkey:e.payer,isSigner:!0,isWritable:!0},{pubkey:ve.programId,isSigner:!1,isWritable:!1}];return[new ne({programId:this.programId,keys:s,data:n}),t]}static freezeLookupTable(e){const t=fe(Ur.FreezeLookupTable),r=[{pubkey:e.lookupTable,isSigner:!1,isWritable:!0},{pubkey:e.authority,isSigner:!0,isWritable:!1}];return new ne({programId:this.programId,keys:r,data:t})}static extendLookupTable(e){const t=fe(Ur.ExtendLookupTable,{addresses:e.addresses.map((e=>e.toBytes()))}),r=[{pubkey:e.lookupTable,isSigner:!1,isWritable:!0},{pubkey:e.authority,isSigner:!0,isWritable:!1}];return e.payer&&r.push({pubkey:e.payer,isSigner:!0,isWritable:!0},{pubkey:ve.programId,isSigner:!1,isWritable:!1}),new ne({programId:this.programId,keys:r,data:t})}static deactivateLookupTable(e){const t=fe(Ur.DeactivateLookupTable),r=[{pubkey:e.lookupTable,isSigner:!1,isWritable:!0},{pubkey:e.authority,isSigner:!0,isWritable:!1}];return new ne({programId:this.programId,keys:r,data:t})}static closeLookupTable(e){const t=fe(Ur.CloseLookupTable),r=[{pubkey:e.lookupTable,isSigner:!1,isWritable:!0},{pubkey:e.authority,isSigner:!0,isWritable:!1},{pubkey:e.recipient,isSigner:!1,isWritable:!0}];return new ne({programId:this.programId,keys:r,data:t})}}Gr.programId=new z("AddressLookupTab1e1111111111111111111111111");class jr{constructor(){}static decodeInstructionType(e){this.checkProgramId(e.programId);const t=l.u8("instruction").decode(e.data);let r;for(const[n,s]of Object.entries(Vr))if(s.index==t){r=n;break}if(!r)throw new Error("Instruction type incorrect; not a ComputeBudgetInstruction");return r}static decodeRequestUnits(e){this.checkProgramId(e.programId);const{units:t,additionalFee:r}=ke(Vr.RequestUnits,e.data);return{units:t,additionalFee:r}}static decodeRequestHeapFrame(e){this.checkProgramId(e.programId);const{bytes:t}=ke(Vr.RequestHeapFrame,e.data);return{bytes:t}}static decodeSetComputeUnitLimit(e){this.checkProgramId(e.programId);const{units:t}=ke(Vr.SetComputeUnitLimit,e.data);return{units:t}}static decodeSetComputeUnitPrice(e){this.checkProgramId(e.programId);const{microLamports:t}=ke(Vr.SetComputeUnitPrice,e.data);return{microLamports:t}}static checkProgramId(e){if(!e.equals(Dr.programId))throw new Error("invalid instruction; programId is not ComputeBudgetProgram")}}const Vr=Object.freeze({RequestUnits:{index:0,layout:l.struct([l.u8("instruction"),l.u32("units"),l.u32("additionalFee")])},RequestHeapFrame:{index:1,layout:l.struct([l.u8("instruction"),l.u32("bytes")])},SetComputeUnitLimit:{index:2,layout:l.struct([l.u8("instruction"),l.u32("units")])},SetComputeUnitPrice:{index:3,layout:l.struct([l.u8("instruction"),Ae("microLamports")])}});class Dr{constructor(){}static requestUnits(e){const t=fe(Vr.RequestUnits,e);return new ne({keys:[],programId:this.programId,data:t})}static requestHeapFrame(e){const t=fe(Vr.RequestHeapFrame,e);return new ne({keys:[],programId:this.programId,data:t})}static setComputeUnitLimit(e){const t=fe(Vr.SetComputeUnitLimit,e);return new ne({keys:[],programId:this.programId,data:t})}static setComputeUnitPrice(e){const t=fe(Vr.SetComputeUnitPrice,{microLamports:BigInt(e.microLamports)});return new ne({keys:[],programId:this.programId,data:t})}}Dr.programId=new z("ComputeBudget111111111111111111111111111111");const Mr=l.struct([l.u8("numSignatures"),l.u8("padding"),l.u16("signatureOffset"),l.u16("signatureInstructionIndex"),l.u16("publicKeyOffset"),l.u16("publicKeyInstructionIndex"),l.u16("messageDataOffset"),l.u16("messageDataSize"),l.u16("messageInstructionIndex")]);class Hr{constructor(){}static createInstructionWithPublicKey(e){const{publicKey:t,message:r,signature:s,instructionIndex:i}=e;X(32===t.length,`Public Key must be 32 bytes but received ${t.length} bytes`),X(64===s.length,`Signature must be 64 bytes but received ${s.length} bytes`);const o=Mr.span,a=o+t.length,c=a+s.length,u=n.Buffer.alloc(c+r.length),d=null==i?65535:i;return Mr.encode({numSignatures:1,padding:0,signatureOffset:a,signatureInstructionIndex:d,publicKeyOffset:o,publicKeyInstructionIndex:d,messageDataOffset:c,messageDataSize:r.length,messageInstructionIndex:d},u),u.fill(t,o),u.fill(s,a),u.fill(r,c),new ne({keys:[],programId:Hr.programId,data:u})}static createInstructionWithPrivateKey(e){const{privateKey:t,message:r,instructionIndex:n}=e;X(64===t.length,`Private key must be 64 bytes but received ${t.length} bytes`);try{const e=Nr.fromSecretKey(t),s=e.publicKey.toBytes(),i=A(r,e.secretKey);return this.createInstructionWithPublicKey({publicKey:s,message:r,signature:i,instructionIndex:n})}catch(s){throw new Error(`Error creating instruction; ${s}`)}}}Hr.programId=new z("Ed25519SigVerify111111111111111111111111111");k.kA.utils.isValidPrivateKey;const Fr=k.kA.getPublicKey,Zr=l.struct([l.u8("numSignatures"),l.u16("signatureOffset"),l.u8("signatureInstructionIndex"),l.u16("ethAddressOffset"),l.u8("ethAddressInstructionIndex"),l.u16("messageDataOffset"),l.u16("messageDataSize"),l.u8("messageInstructionIndex"),l.blob(20,"ethAddress"),l.blob(64,"signature"),l.u8("recoveryId")]);class $r{constructor(){}static publicKeyToEthAddress(e){X(64===e.length,`Public key must be 64 bytes but received ${e.length} bytes`);try{return n.Buffer.from((0,f.fr)(x(e))).slice(-20)}catch(t){throw new Error(`Error constructing Ethereum address: ${t}`)}}static createInstructionWithPublicKey(e){const{publicKey:t,message:r,signature:n,recoveryId:s,instructionIndex:i}=e;return $r.createInstructionWithEthAddress({ethAddress:$r.publicKeyToEthAddress(t),message:r,signature:n,recoveryId:s,instructionIndex:i})}static createInstructionWithEthAddress(e){const{ethAddress:t,message:r,signature:s,recoveryId:i,instructionIndex:o=0}=e;let a;a="string"===typeof t?t.startsWith("0x")?n.Buffer.from(t.substr(2),"hex"):n.Buffer.from(t,"hex"):t,X(20===a.length,`Address must be 20 bytes but received ${a.length} bytes`);const c=12+a.length,u=c+s.length+1,d=n.Buffer.alloc(Zr.span+r.length);return Zr.encode({numSignatures:1,signatureOffset:c,signatureInstructionIndex:o,ethAddressOffset:12,ethAddressInstructionIndex:o,messageDataOffset:u,messageDataSize:r.length,messageInstructionIndex:o,signature:x(s),ethAddress:x(a),recoveryId:i},d),d.fill(x(r),Zr.span),new ne({keys:[],programId:$r.programId,data:d})}static createInstructionWithPrivateKey(e){const{privateKey:t,message:r,instructionIndex:s}=e;X(32===t.length,`Private key must be 32 bytes but received ${t.length} bytes`);try{const e=x(t),i=Fr(e,!1).slice(1),o=n.Buffer.from((0,f.fr)(x(r))),[a,c]=((e,t)=>{const r=k.kA.sign(e,t);return[r.toCompactRawBytes(),r.recovery]})(o,e);return this.createInstructionWithPublicKey({publicKey:i,message:r,signature:a,recoveryId:c,instructionIndex:s})}catch(i){throw new Error(`Error creating instruction; ${i}`)}}}$r.programId=new z("KeccakSecp256k11111111111111111111111111111");const Xr=new z("StakeConfig11111111111111111111111111111111");class Jr{constructor(e,t){this.staker=void 0,this.withdrawer=void 0,this.staker=e,this.withdrawer=t}}class Yr{constructor(e,t,r){this.unixTimestamp=void 0,this.epoch=void 0,this.custodian=void 0,this.unixTimestamp=e,this.epoch=t,this.custodian=r}}Yr.default=new Yr(0,0,z.default);class Qr{constructor(){}static decodeInstructionType(e){this.checkProgramId(e.programId);const t=l.u32("instruction").decode(e.data);let r;for(const[n,s]of Object.entries(en))if(s.index==t){r=n;break}if(!r)throw new Error("Instruction type incorrect; not a StakeInstruction");return r}static decodeInitialize(e){this.checkProgramId(e.programId),this.checkKeyLength(e.keys,2);const{authorized:t,lockup:r}=ke(en.Initialize,e.data);return{stakePubkey:e.keys[0].pubkey,authorized:new Jr(new z(t.staker),new z(t.withdrawer)),lockup:new Yr(r.unixTimestamp,r.epoch,new z(r.custodian))}}static decodeDelegate(e){return this.checkProgramId(e.programId),this.checkKeyLength(e.keys,6),ke(en.Delegate,e.data),{stakePubkey:e.keys[0].pubkey,votePubkey:e.keys[1].pubkey,authorizedPubkey:e.keys[5].pubkey}}static decodeAuthorize(e){this.checkProgramId(e.programId),this.checkKeyLength(e.keys,3);const{newAuthorized:t,stakeAuthorizationType:r}=ke(en.Authorize,e.data),n={stakePubkey:e.keys[0].pubkey,authorizedPubkey:e.keys[2].pubkey,newAuthorizedPubkey:new z(t),stakeAuthorizationType:{index:r}};return e.keys.length>3&&(n.custodianPubkey=e.keys[3].pubkey),n}static decodeAuthorizeWithSeed(e){this.checkProgramId(e.programId),this.checkKeyLength(e.keys,2);const{newAuthorized:t,stakeAuthorizationType:r,authoritySeed:n,authorityOwner:s}=ke(en.AuthorizeWithSeed,e.data),i={stakePubkey:e.keys[0].pubkey,authorityBase:e.keys[1].pubkey,authoritySeed:n,authorityOwner:new z(s),newAuthorizedPubkey:new z(t),stakeAuthorizationType:{index:r}};return e.keys.length>3&&(i.custodianPubkey=e.keys[3].pubkey),i}static decodeSplit(e){this.checkProgramId(e.programId),this.checkKeyLength(e.keys,3);const{lamports:t}=ke(en.Split,e.data);return{stakePubkey:e.keys[0].pubkey,splitStakePubkey:e.keys[1].pubkey,authorizedPubkey:e.keys[2].pubkey,lamports:t}}static decodeMerge(e){return this.checkProgramId(e.programId),this.checkKeyLength(e.keys,3),ke(en.Merge,e.data),{stakePubkey:e.keys[0].pubkey,sourceStakePubKey:e.keys[1].pubkey,authorizedPubkey:e.keys[4].pubkey}}static decodeWithdraw(e){this.checkProgramId(e.programId),this.checkKeyLength(e.keys,5);const{lamports:t}=ke(en.Withdraw,e.data),r={stakePubkey:e.keys[0].pubkey,toPubkey:e.keys[1].pubkey,authorizedPubkey:e.keys[4].pubkey,lamports:t};return e.keys.length>5&&(r.custodianPubkey=e.keys[5].pubkey),r}static decodeDeactivate(e){return this.checkProgramId(e.programId),this.checkKeyLength(e.keys,3),ke(en.Deactivate,e.data),{stakePubkey:e.keys[0].pubkey,authorizedPubkey:e.keys[2].pubkey}}static checkProgramId(e){if(!e.equals(rn.programId))throw new Error("invalid instruction; programId is not StakeProgram")}static checkKeyLength(e,t){if(e.length<t)throw new Error(`invalid instruction; found ${e.length} keys, expected at least ${t}`)}}const en=Object.freeze({Initialize:{index:0,layout:l.struct([l.u32("instruction"),((e="authorized")=>l.struct([D("staker"),D("withdrawer")],e))(),((e="lockup")=>l.struct([l.ns64("unixTimestamp"),l.ns64("epoch"),D("custodian")],e))()])},Authorize:{index:1,layout:l.struct([l.u32("instruction"),D("newAuthorized"),l.u32("stakeAuthorizationType")])},Delegate:{index:2,layout:l.struct([l.u32("instruction")])},Split:{index:3,layout:l.struct([l.u32("instruction"),l.ns64("lamports")])},Withdraw:{index:4,layout:l.struct([l.u32("instruction"),l.ns64("lamports")])},Deactivate:{index:5,layout:l.struct([l.u32("instruction")])},Merge:{index:7,layout:l.struct([l.u32("instruction")])},AuthorizeWithSeed:{index:8,layout:l.struct([l.u32("instruction"),D("newAuthorized"),l.u32("stakeAuthorizationType"),H("authoritySeed"),D("authorityOwner")])}}),tn=Object.freeze({Staker:{index:0},Withdrawer:{index:1}});class rn{constructor(){}static initialize(e){const{stakePubkey:t,authorized:r,lockup:n}=e,s=n||Yr.default,i=fe(en.Initialize,{authorized:{staker:x(r.staker.toBuffer()),withdrawer:x(r.withdrawer.toBuffer())},lockup:{unixTimestamp:s.unixTimestamp,epoch:s.epoch,custodian:x(s.custodian.toBuffer())}}),o={keys:[{pubkey:t,isSigner:!1,isWritable:!0},{pubkey:le,isSigner:!1,isWritable:!1}],programId:this.programId,data:i};return new ne(o)}static createAccountWithSeed(e){const t=new se;t.add(ve.createAccountWithSeed({fromPubkey:e.fromPubkey,newAccountPubkey:e.stakePubkey,basePubkey:e.basePubkey,seed:e.seed,lamports:e.lamports,space:this.space,programId:this.programId}));const{stakePubkey:r,authorized:n,lockup:s}=e;return t.add(this.initialize({stakePubkey:r,authorized:n,lockup:s}))}static createAccount(e){const t=new se;t.add(ve.createAccount({fromPubkey:e.fromPubkey,newAccountPubkey:e.stakePubkey,lamports:e.lamports,space:this.space,programId:this.programId}));const{stakePubkey:r,authorized:n,lockup:s}=e;return t.add(this.initialize({stakePubkey:r,authorized:n,lockup:s}))}static delegate(e){const{stakePubkey:t,authorizedPubkey:r,votePubkey:n}=e,s=fe(en.Delegate);return(new se).add({keys:[{pubkey:t,isSigner:!1,isWritable:!0},{pubkey:n,isSigner:!1,isWritable:!1},{pubkey:ae,isSigner:!1,isWritable:!1},{pubkey:ye,isSigner:!1,isWritable:!1},{pubkey:Xr,isSigner:!1,isWritable:!1},{pubkey:r,isSigner:!0,isWritable:!1}],programId:this.programId,data:s})}static authorize(e){const{stakePubkey:t,authorizedPubkey:r,newAuthorizedPubkey:n,stakeAuthorizationType:s,custodianPubkey:i}=e,o=fe(en.Authorize,{newAuthorized:x(n.toBuffer()),stakeAuthorizationType:s.index}),a=[{pubkey:t,isSigner:!1,isWritable:!0},{pubkey:ae,isSigner:!1,isWritable:!0},{pubkey:r,isSigner:!0,isWritable:!1}];return i&&a.push({pubkey:i,isSigner:!1,isWritable:!1}),(new se).add({keys:a,programId:this.programId,data:o})}static authorizeWithSeed(e){const{stakePubkey:t,authorityBase:r,authoritySeed:n,authorityOwner:s,newAuthorizedPubkey:i,stakeAuthorizationType:o,custodianPubkey:a}=e,c=fe(en.AuthorizeWithSeed,{newAuthorized:x(i.toBuffer()),stakeAuthorizationType:o.index,authoritySeed:n,authorityOwner:x(s.toBuffer())}),u=[{pubkey:t,isSigner:!1,isWritable:!0},{pubkey:r,isSigner:!0,isWritable:!1},{pubkey:ae,isSigner:!1,isWritable:!1}];return a&&u.push({pubkey:a,isSigner:!1,isWritable:!1}),(new se).add({keys:u,programId:this.programId,data:c})}static splitInstruction(e){const{stakePubkey:t,authorizedPubkey:r,splitStakePubkey:n,lamports:s}=e,i=fe(en.Split,{lamports:s});return new ne({keys:[{pubkey:t,isSigner:!1,isWritable:!0},{pubkey:n,isSigner:!1,isWritable:!0},{pubkey:r,isSigner:!0,isWritable:!1}],programId:this.programId,data:i})}static split(e){const t=new se;return t.add(ve.createAccount({fromPubkey:e.authorizedPubkey,newAccountPubkey:e.splitStakePubkey,lamports:0,space:this.space,programId:this.programId})),t.add(this.splitInstruction(e))}static splitWithSeed(e){const{stakePubkey:t,authorizedPubkey:r,splitStakePubkey:n,basePubkey:s,seed:i,lamports:o}=e,a=new se;return a.add(ve.allocate({accountPubkey:n,basePubkey:s,seed:i,space:this.space,programId:this.programId})),a.add(this.splitInstruction({stakePubkey:t,authorizedPubkey:r,splitStakePubkey:n,lamports:o}))}static merge(e){const{stakePubkey:t,sourceStakePubKey:r,authorizedPubkey:n}=e,s=fe(en.Merge);return(new se).add({keys:[{pubkey:t,isSigner:!1,isWritable:!0},{pubkey:r,isSigner:!1,isWritable:!0},{pubkey:ae,isSigner:!1,isWritable:!1},{pubkey:ye,isSigner:!1,isWritable:!1},{pubkey:n,isSigner:!0,isWritable:!1}],programId:this.programId,data:s})}static withdraw(e){const{stakePubkey:t,authorizedPubkey:r,toPubkey:n,lamports:s,custodianPubkey:i}=e,o=fe(en.Withdraw,{lamports:s}),a=[{pubkey:t,isSigner:!1,isWritable:!0},{pubkey:n,isSigner:!1,isWritable:!0},{pubkey:ae,isSigner:!1,isWritable:!1},{pubkey:ye,isSigner:!1,isWritable:!1},{pubkey:r,isSigner:!0,isWritable:!1}];return i&&a.push({pubkey:i,isSigner:!1,isWritable:!1}),(new se).add({keys:a,programId:this.programId,data:o})}static deactivate(e){const{stakePubkey:t,authorizedPubkey:r}=e,n=fe(en.Deactivate);return(new se).add({keys:[{pubkey:t,isSigner:!1,isWritable:!0},{pubkey:ae,isSigner:!1,isWritable:!1},{pubkey:r,isSigner:!0,isWritable:!1}],programId:this.programId,data:n})}}rn.programId=new z("Stake11111111111111111111111111111111111111"),rn.space=200;class nn{constructor(e,t,r,n){this.nodePubkey=void 0,this.authorizedVoter=void 0,this.authorizedWithdrawer=void 0,this.commission=void 0,this.nodePubkey=e,this.authorizedVoter=t,this.authorizedWithdrawer=r,this.commission=n}}class sn{constructor(){}static decodeInstructionType(e){this.checkProgramId(e.programId);const t=l.u32("instruction").decode(e.data);let r;for(const[n,s]of Object.entries(on))if(s.index==t){r=n;break}if(!r)throw new Error("Instruction type incorrect; not a VoteInstruction");return r}static decodeInitializeAccount(e){this.checkProgramId(e.programId),this.checkKeyLength(e.keys,4);const{voteInit:t}=ke(on.InitializeAccount,e.data);return{votePubkey:e.keys[0].pubkey,nodePubkey:e.keys[3].pubkey,voteInit:new nn(new z(t.nodePubkey),new z(t.authorizedVoter),new z(t.authorizedWithdrawer),t.commission)}}static decodeAuthorize(e){this.checkProgramId(e.programId),this.checkKeyLength(e.keys,3);const{newAuthorized:t,voteAuthorizationType:r}=ke(on.Authorize,e.data);return{votePubkey:e.keys[0].pubkey,authorizedPubkey:e.keys[2].pubkey,newAuthorizedPubkey:new z(t),voteAuthorizationType:{index:r}}}static decodeAuthorizeWithSeed(e){this.checkProgramId(e.programId),this.checkKeyLength(e.keys,3);const{voteAuthorizeWithSeedArgs:{currentAuthorityDerivedKeyOwnerPubkey:t,currentAuthorityDerivedKeySeed:r,newAuthorized:n,voteAuthorizationType:s}}=ke(on.AuthorizeWithSeed,e.data);return{currentAuthorityDerivedKeyBasePubkey:e.keys[2].pubkey,currentAuthorityDerivedKeyOwnerPubkey:new z(t),currentAuthorityDerivedKeySeed:r,newAuthorizedPubkey:new z(n),voteAuthorizationType:{index:s},votePubkey:e.keys[0].pubkey}}static decodeWithdraw(e){this.checkProgramId(e.programId),this.checkKeyLength(e.keys,3);const{lamports:t}=ke(on.Withdraw,e.data);return{votePubkey:e.keys[0].pubkey,authorizedWithdrawerPubkey:e.keys[2].pubkey,lamports:t,toPubkey:e.keys[1].pubkey}}static checkProgramId(e){if(!e.equals(cn.programId))throw new Error("invalid instruction; programId is not VoteProgram")}static checkKeyLength(e,t){if(e.length<t)throw new Error(`invalid instruction; found ${e.length} keys, expected at least ${t}`)}}const on=Object.freeze({InitializeAccount:{index:0,layout:l.struct([l.u32("instruction"),((e="voteInit")=>l.struct([D("nodePubkey"),D("authorizedVoter"),D("authorizedWithdrawer"),l.u8("commission")],e))()])},Authorize:{index:1,layout:l.struct([l.u32("instruction"),D("newAuthorized"),l.u32("voteAuthorizationType")])},Withdraw:{index:3,layout:l.struct([l.u32("instruction"),l.ns64("lamports")])},AuthorizeWithSeed:{index:10,layout:l.struct([l.u32("instruction"),((e="voteAuthorizeWithSeedArgs")=>l.struct([l.u32("voteAuthorizationType"),D("currentAuthorityDerivedKeyOwnerPubkey"),H("currentAuthorityDerivedKeySeed"),D("newAuthorized")],e))()])}}),an=Object.freeze({Voter:{index:0},Withdrawer:{index:1}});class cn{constructor(){}static initializeAccount(e){const{votePubkey:t,nodePubkey:r,voteInit:n}=e,s=fe(on.InitializeAccount,{voteInit:{nodePubkey:x(n.nodePubkey.toBuffer()),authorizedVoter:x(n.authorizedVoter.toBuffer()),authorizedWithdrawer:x(n.authorizedWithdrawer.toBuffer()),commission:n.commission}}),i={keys:[{pubkey:t,isSigner:!1,isWritable:!0},{pubkey:le,isSigner:!1,isWritable:!1},{pubkey:ae,isSigner:!1,isWritable:!1},{pubkey:r,isSigner:!0,isWritable:!1}],programId:this.programId,data:s};return new ne(i)}static createAccount(e){const t=new se;return t.add(ve.createAccount({fromPubkey:e.fromPubkey,newAccountPubkey:e.votePubkey,lamports:e.lamports,space:this.space,programId:this.programId})),t.add(this.initializeAccount({votePubkey:e.votePubkey,nodePubkey:e.voteInit.nodePubkey,voteInit:e.voteInit}))}static authorize(e){const{votePubkey:t,authorizedPubkey:r,newAuthorizedPubkey:n,voteAuthorizationType:s}=e,i=fe(on.Authorize,{newAuthorized:x(n.toBuffer()),voteAuthorizationType:s.index}),o=[{pubkey:t,isSigner:!1,isWritable:!0},{pubkey:ae,isSigner:!1,isWritable:!1},{pubkey:r,isSigner:!0,isWritable:!1}];return(new se).add({keys:o,programId:this.programId,data:i})}static authorizeWithSeed(e){const{currentAuthorityDerivedKeyBasePubkey:t,currentAuthorityDerivedKeyOwnerPubkey:r,currentAuthorityDerivedKeySeed:n,newAuthorizedPubkey:s,voteAuthorizationType:i,votePubkey:o}=e,a=fe(on.AuthorizeWithSeed,{voteAuthorizeWithSeedArgs:{currentAuthorityDerivedKeyOwnerPubkey:x(r.toBuffer()),currentAuthorityDerivedKeySeed:n,newAuthorized:x(s.toBuffer()),voteAuthorizationType:i.index}}),c=[{pubkey:o,isSigner:!1,isWritable:!0},{pubkey:ae,isSigner:!1,isWritable:!1},{pubkey:t,isSigner:!0,isWritable:!1}];return(new se).add({keys:c,programId:this.programId,data:a})}static withdraw(e){const{votePubkey:t,authorizedWithdrawerPubkey:r,lamports:n,toPubkey:s}=e,i=fe(on.Withdraw,{lamports:n}),o=[{pubkey:t,isSigner:!1,isWritable:!0},{pubkey:s,isSigner:!1,isWritable:!0},{pubkey:r,isSigner:!0,isWritable:!1}];return(new se).add({keys:o,programId:this.programId,data:i})}static safeWithdraw(e,t,r){if(e.lamports>t-r)throw new Error("Withdraw will leave vote account with insuffcient funds.");return cn.withdraw(e)}}cn.programId=new z("Vote111111111111111111111111111111111111111"),cn.space=3731;const un=new z("Va1idator1nfo111111111111111111111111111111"),dn=(0,g.dt)({name:(0,g.Z_)(),website:(0,g.jt)((0,g.Z_)()),details:(0,g.jt)((0,g.Z_)()),keybaseUsername:(0,g.jt)((0,g.Z_)())});class ln{constructor(e,t){this.key=void 0,this.info=void 0,this.key=e,this.info=t}static fromConfigData(e){let t=[...e];if(2!==Z(t))return null;const r=[];for(let n=0;n<2;n++){const e=new z(t.slice(0,C));t=t.slice(C);const n=1===t.slice(0,1)[0];t=t.slice(1),r.push({publicKey:e,isSigner:n})}if(r[0].publicKey.equals(un)&&r[1].isSigner){const e=H().decode(n.Buffer.from(t)),s=JSON.parse(e);return(0,g.hu)(s,dn),new ln(r[1].publicKey,s)}return null}}const hn=new z("Vote111111111111111111111111111111111111111"),gn=l.struct([D("nodePubkey"),D("authorizedWithdrawer"),l.u8("commission"),l.nu64(),l.seq(l.struct([l.nu64("slot"),l.u32("confirmationCount")]),l.offset(l.u32(),-8),"votes"),l.u8("rootSlotValid"),l.nu64("rootSlot"),l.nu64(),l.seq(l.struct([l.nu64("epoch"),D("authorizedVoter")]),l.offset(l.u32(),-8),"authorizedVoters"),l.struct([l.seq(l.struct([D("authorizedPubkey"),l.nu64("epochOfLastAuthorizedSwitch"),l.nu64("targetEpoch")]),32,"buf"),l.nu64("idx"),l.u8("isEmpty")],"priorVoters"),l.nu64(),l.seq(l.struct([l.nu64("epoch"),l.nu64("credits"),l.nu64("prevCredits")]),l.offset(l.u32(),-8),"epochCredits"),l.struct([l.nu64("slot"),l.nu64("timestamp")],"lastTimestamp")]);class pn{constructor(e){this.nodePubkey=void 0,this.authorizedWithdrawer=void 0,this.commission=void 0,this.rootSlot=void 0,this.votes=void 0,this.authorizedVoters=void 0,this.priorVoters=void 0,this.epochCredits=void 0,this.lastTimestamp=void 0,this.nodePubkey=e.nodePubkey,this.authorizedWithdrawer=e.authorizedWithdrawer,this.commission=e.commission,this.rootSlot=e.rootSlot,this.votes=e.votes,this.authorizedVoters=e.authorizedVoters,this.priorVoters=e.priorVoters,this.epochCredits=e.epochCredits,this.lastTimestamp=e.lastTimestamp}static fromAccountData(e){const t=gn.decode(x(e),4);let r=t.rootSlot;return t.rootSlotValid||(r=null),new pn({nodePubkey:new z(t.nodePubkey),authorizedWithdrawer:new z(t.authorizedWithdrawer),commission:t.commission,votes:t.votes,rootSlot:r,authorizedVoters:t.authorizedVoters.map(yn),priorVoters:bn(t.priorVoters),epochCredits:t.epochCredits,lastTimestamp:t.lastTimestamp})}}function yn({authorizedVoter:e,epoch:t}){return{epoch:t,authorizedVoter:new z(e)}}function mn({authorizedPubkey:e,epochOfLastAuthorizedSwitch:t,targetEpoch:r}){return{authorizedPubkey:new z(e),epochOfLastAuthorizedSwitch:t,targetEpoch:r}}function bn({buf:e,idx:t,isEmpty:r}){return r?[]:[...e.slice(t+1).map(mn),...e.slice(0,t).map(mn)]}const fn={http:{devnet:"http://api.devnet.solana.com",testnet:"http://api.testnet.solana.com","mainnet-beta":"http://api.mainnet-beta.solana.com/"},https:{devnet:"https://api.devnet.solana.com",testnet:"https://api.testnet.solana.com","mainnet-beta":"https://api.mainnet-beta.solana.com/"}};function kn(e,t){const r=!1===t?"http":"https";if(!e)return fn[r].devnet;const n=fn[r][e];if(!n)throw new Error(`Unknown ${r} cluster: ${e}`);return n}async function wn(e,t,r,n){let s,i;r&&Object.prototype.hasOwnProperty.call(r,"lastValidBlockHeight")||r&&Object.prototype.hasOwnProperty.call(r,"nonceValue")?(s=r,i=n):i=r;const o=i&&{skipPreflight:i.skipPreflight,preflightCommitment:i.preflightCommitment||i.commitment,minContextSlot:i.minContextSlot},a=await e.sendRawTransaction(t,o),c=i&&i.commitment,u=s?e.confirmTransaction(s,c):e.confirmTransaction(a,c),d=(await u).value;if(d.err)throw new Error(`Raw transaction ${a} failed (${JSON.stringify(d)})`);return a}const Sn=1e9}}]);